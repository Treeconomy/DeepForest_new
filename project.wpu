#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('deepforest/main.py'): {292L: (0,
        None,
        1,
        0)},
                     loc('tests/test_model.py'): {10L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {}}
debug.exceptions-ignored = {loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1514: True},
                            loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/config/__init__.py'): {1514: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BeCfPquEZeqQ6pfJCERhTaNA7C'\
        'a3fCTw',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.24526134405514077,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (1,
         0),
        (17,)],
                                 'selected-nodes': [(1,
        5)],
                                 'top-node': (1,
        0,
        15)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4,
                          2],
        'notebook_display': 'normal',
        'notebook_percent': 0.6197866149369544,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'format_boxes',
                                       'fReverse': False,
                                       'fSearchText': u'use_release',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(0,),
        (4,),
        (4,
         2),
        (4,
         6),
        (4,
         7),
        (4,
         10),
        (4,
         11),
        (5,),
        (7,),
        (8,)],
                                      'selected-nodes': [(4,)],
                                      'top-node': (2,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 35456L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ["l"\
        "ist(retinanet_model.named_modules(memo=None, prefix=''))\n",
        'backbone\n',
        'prediction = retinanet(x)\n',
        'retinanet["cls_logits"]\n',
        'retinanet("cls_logits")\n',
        'retinanet.named_children("cls_logits")\n',
        'retinanet.named_children()\n',
        'from torchsummary import summary\n',
        'summary(retinanet, (3,400,400))\n',
        'summary(retinanet, [3,400,400])\n',
        'summary(retinanet)\n',
        'summary(retinanet, (1,1,32))\n',
        'summary(retinanet,torch.rand(3, 300, 400))\n',
        'summary(retinanet,(3, 300, 400))\n',
        'retinanet\n',
        'import pandas as \n',
        'saved_images\n',
        'tmpdir\n',
        'self.log_images(pl_module)\n',
        'self.savedir\n',
        'predictions = pl_module.model(images)\n',
        'predictions\n',
        'precision, recall = m.evaluate(csv_file, root_dir, iou_threshold = '\
        '0.5, show_plot=True)\n',
        'recall\n',
        '"Precision is {}, Recall is {}".format(result_dict["precision"],res'\
        'ult_dict["recall"])\n',
        'results, precision, recall = m.evaluate(csv_file, root_dir, iou_thr'\
        'eshold = 0.5, show_plot=True)\n',
        'df\n',
        'df[0]\n',
        'df[0].keys\n',
        'df[0].keys()\n',
        'result = df[0]["results"]\n',
        'df.head(n=5)\n',
        'result.head(n=5)\n',
        'results.score\n',
        'iou_threshold\n',
        'predictions.head(n=5)\n',
        'predictions.scores\n',
        'predictions.min()\n',
        'predictions.scores.min()\n',
        'results.head(n=5)\n',
        ' result_dict["precision"]\n',
        'results["match"] = results.IoU > iou_threshold\n',
        'pd.read_csv(csv_file)\n',
        'plot_ground_truth\n',
        'image_path\n',
        'self.config["validation"]["csv_file"]\n',
        'loader\n',
        'df = self.trainer.model(self, loader)\n',
        'df = self.model(self, loader)\n',
        'self\n',
        'self.model\n',
        'ground_df.plot()',
        'type(ground_df)\n',
        'ground_df.geometry.plot()\n',
        'ground_df.plot()\n',
        'ground_df.geometry.boundary.plot(color="red", ax = ax)\n',
        'rgb_path\n',
        'rgb_path = "{}/{}".format(root_dir,plot_name)\nrgb_src = rasterio.o'\
        'pen(rgb_path)        \nfig, ax = pyplot.subplots(figsize=(6, 6))\n'\
        'show(rgb_src, ax = ax)\nground_df.geometry.boundary.plot(color="red'\
        '", ax = ax)\npredictions.geometry.boundary.plot(ax=ax,color="blue")'\
        '\n\n',
        'ground_df.geometry\n',
        'predictions.geometry\n',
        'rgb_src\n',
        'ground_df\n',
        'csv_file = get_data("OSBS_029.csv")\n',
        'csv_file\n',
        'root_dir = os.path.dirname(csv_file)\n',
        'root_dir\n',
        'results = m.evaluate(csv_file, root_dir, iou_threshold = 0.4, show_'\
        'plot=True)\n',
        'results\n',
        'results["precision"]\n',
        'np.round(results["precision"],2)\n',
        ' model.state_dict()\n',
        'self.path\n',
        '"{}/checkpoint.pl".format(tmpdir)\n',
        ' m.save_model\n',
        ' m.save_model()\n',
        'model(image)\n',
        'model\n',
        'model.forward()\n',
        'm.model\n',
        'm.model.forward\n',
        'm.model()\n',
        'm.model.format()\n',
        'm.model.forward()\n',
        'from deepforest import main\n',
        'main.deepforest.load_from_checkpoint()\n',
        'm.model = main.deepforest.load_from_checkpoint("{}/checkpoint.pl".f'\
        'ormat(tmpdir))\n',
        'after = main.deepforest.load_from_checkpoint("{}/checkpoint.pl".for'\
        'mat(tmpdir))\n',
        'after\n',
        'pred_after_reload = after.predict_image(path = img_path)\n',
        'assert not pred_after_train.empty\n',
        'assert not pred_after_reload.empty\n',
        'assert pred_after_train == pred_after_reload\n',
        'assert pd.testing.assert_frame_equal(pred_after_train,pred_after_re'\
        'load)\n',
        'pred_after_train\n',
        'pred_after_train.shape\n',
        'pred_after_reload\n',
        'pred_after_train.head(n=5)\n',
        'pred_after_reload.head()\n',
        'pd.testing.assert_frame_equal(pred_after_train,pred_after_reload)\n',
        'prediction\n'],
                                   u'file:/Users/benweinstein/Documents/DeepForest_Model/example_prediction.py': ['m'\
        ' = torch.load("snapshots/hand_annotated_model.pt", map_location = t'\
        'orch.device("cpu"))\n',
        'm\n',
        'type(m)\n',
        'm = main.deepforest()\n\n',
        'm.model.load_state_dict(torch.load("snapshots/hand_annotated_model.'\
        'pt", map_location = torch.device("cpu")))\n',
        'sample_data = get_data("OSBS_029.tif")\n',
        'img = m.predict_image(sample_data, return_plot=True)\n',
        'img = m.predict_image(path=sample_data, return_plot=True)\n',
        'img\n',
        'plot.show()\n',
        'plt.show()\n',
        'boxes = m.predict_image(path=sample_data, return_plot=False)\n',
        'boxes.head()\n',
        'boxes.label\n',
        'boxes.label.unique()\n',
        'boxes.scores\n',
        'boxes_per_class\n',
        'scores_per_class.shape\n',
        'self.detections_per_img\n',
        'class_index\n',
        'scores_per_image\n',
        'scores_per_image.shape\n',
        'labels_per_image\n',
        'labels_per_image.unique(sorted=True, return_inverse=False, return_c'\
        'ounts=False, dim=None)\n',
        'num_classes\n',
        'keep = box_ops.nms(boxes_per_class, scores_per_class, self.nms_thre'\
        'sh)\n',
        'keeo\n',
        'keep\n',
        'keep.shape\n',
        'boxes_per_class.shape\n',
        'box_ops.nms\n',
        'boxes_per_class.dtype\n',
        'scores_per_class.dtype\n',
        'self.nms_thresh\n']},
                       'launch-id': None,
                       'sel-line': 35484L,
                       'sel-line-start': 1789770L,
                       'selection_end': 1789770L,
                       'selection_start': 1789770L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': 'a = utilities.xml_to_annotations(csv_fi'\
                                    'le)',
                       'first-line': 21L,
                       'folded-linenos': [],
                       'history': {None: ['None is None\n',
        'from deepforest import get_data\n',
        'csv_file = get_data("OSBS_029.xml")\n',
        'csv\n',
        'from deepforest import utilities\n',
        'a = utilities.xml_to_annotations(csv_file)\n',
        'a.head()\n',
        'a.to_csv("data/OSBS_029.csv")\n',
        'import os\n',
        'import ops\n',
        'os.getcwd()\n',
        'a.to_csv("deepforest/data/OSBS_029.csv")\n',
        'a.to_csv("deepforest/data/OSBS_029.csv",index=False)\n',
        'csv_file = get_data("OSBS_029.csv")\n']},
                       'launch-id': None,
                       'sel-line': 51L,
                       'sel-line-start': 2251L,
                       'selection_end': 2293L,
                       'selection_start': 2293L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('tests/test_main.py'),
        {'attrib-starts': [('test_save_and_reload|0|',
                            143)],
         'code-line': 'def test_save_and_reload(m, tmpdir):\n',
         'first-line': 140L,
         'folded-linenos': [],
         'sel-line': 143L,
         'sel-line-start': 5116L,
         'selection_end': 5152L,
         'selection_start': 5116L,
         'zoom': 0L},
        1614819234.999522],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('_forward_unimplemented|0|',
                             163)],
          'code-line': '    raise NotImplementedError\n',
          'first-line': 169L,
          'folded-linenos': [],
          'sel-line': 174L,
          'sel-line-start': 6828L,
          'selection_end': 6828L,
          'selection_start': 6828L,
          'zoom': 0L},
         1614819239.039133],
        [loc('deepforest/predict.py'),
         {'attrib-starts': [('predict_image|0|',
                             13)],
          'code-line': '    prediction = model(image)\n',
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 27L,
          'sel-line-start': 879L,
          'selection_end': 879L,
          'selection_start': 879L,
          'zoom': 0L},
         1614819240.560029],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_save_and_reload|0|',
                             143)],
          'code-line': '    assert pred_after_train == pred_after_reload\n',
          'first-line': 144L,
          'folded-linenos': [],
          'sel-line': 157L,
          'sel-line-start': 5736L,
          'selection_end': 5785L,
          'selection_start': 5736L,
          'zoom': 0L},
         1614819278.608403],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame|0|',
                             144),
                            ('NDFrame|0|.__nonzero__|0|',
                             1437)],
          'code-line': '        raise ValueError(\n',
          'first-line': 1424L,
          'folded-linenos': [],
          'sel-line': 1438L,
          'sel-line-start': 44187L,
          'selection_end': 44187L,
          'selection_start': 44187L,
          'zoom': 0L},
         1614819282.400232],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_save_and_reload|0|',
                             143)],
          'code-line': '\n',
          'first-line': 68L,
          'folded-linenos': [],
          'sel-line': 154L,
          'sel-line-start': 5658L,
          'selection_end': 5658L,
          'selection_start': 5658L,
          'zoom': 0L},
         1614819458.098186],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.evaluate|0|',
                             318)],
          'code-line': '        results = evaluate_iou.evaluate(\n',
          'first-line': 327L,
          'folded-linenos': [],
          'sel-line': 336L,
          'sel-line-start': 14144L,
          'selection_end': 14168L,
          'selection_start': 14166L,
          'zoom': 0L},
         1614819460.534552],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.evaluate|0|',
                             318)],
          'code-line': '        #if no arg for iou_threshold, set as config'\
                       '\n',
          'first-line': 327L,
          'folded-linenos': [],
          'sel-line': 332L,
          'sel-line-start': 13978L,
          'selection_end': 14004L,
          'selection_start': 14003L,
          'zoom': 0L},
         1614819461.280525],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.evaluate|0|',
                             318)],
          'code-line': '        results = evaluate_iou.evaluate(\n',
          'first-line': 327L,
          'folded-linenos': [],
          'sel-line': 336L,
          'sel-line-start': 14144L,
          'selection_end': 14168L,
          'selection_start': 14166L,
          'zoom': 0L},
         1614819461.434733],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.use_release|0|',
                             51)],
          'code-line': '    def use_release(self):\n',
          'first-line': 46L,
          'folded-linenos': [],
          'sel-line': 51L,
          'sel-line-start': 1619L,
          'selection_end': 1638L,
          'selection_start': 1627L,
          'zoom': 0L},
         1614819463.390063],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.evaluate|0|',
                             318)],
          'code-line': '        \n',
          'first-line': 284L,
          'folded-linenos': [],
          'sel-line': 342L,
          'sel-line-start': 14345L,
          'selection_end': 14353L,
          'selection_start': 14353L,
          'zoom': 0L},
         1614819505.439718],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.use_release|0|',
                             51)],
          'code-line': '        release_tag, self.state_dict = utilities.use'\
                       '_release()\n',
          'first-line': 46L,
          'folded-linenos': [],
          'sel-line': 58L,
          'sel-line-start': 1910L,
          'selection_end': 1924L,
          'selection_start': 1924L,
          'zoom': 0L},
         1614819540.131085],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_save_and_reload|0|',
                             143)],
          'code-line': '\n',
          'first-line': 68L,
          'folded-linenos': [],
          'sel-line': 154L,
          'sel-line-start': 5658L,
          'selection_end': 5658L,
          'selection_start': 5658L,
          'zoom': 0L},
         1614819540.135645],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('m|0|',
                             20)],
          'code-line': 'def m(download_release):\n',
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 461L,
          'selection_end': 483L,
          'selection_start': 483L,
          'zoom': 0L},
         1614819611.15985],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_predict_image_fromarray|0|',
                             54)],
          'code-line': 'def test_predict_image_fromarray(m):\n',
          'first-line': 45L,
          'folded-linenos': [],
          'sel-line': 54L,
          'sel-line-start': 1496L,
          'selection_end': 1532L,
          'selection_start': 1496L,
          'zoom': 0L},
         1614819624.688724],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_save_and_reload|0|',
                             142)],
          'code-line': 'def test_save_and_reload(m, tmpdir):\n',
          'first-line': 133L,
          'folded-linenos': [],
          'sel-line': 142L,
          'sel-line-start': 5027L,
          'selection_end': 5063L,
          'selection_start': 5027L,
          'zoom': 0L},
         1614819632.681368],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_evaluate|0|',
                             112)],
          'code-line': 'def test_evaluate(m):\n',
          'first-line': 103L,
          'folded-linenos': [],
          'sel-line': 112L,
          'sel-line-start': 4061L,
          'selection_end': 4082L,
          'selection_start': 4061L,
          'zoom': 0L},
         1614819633.800968],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('m|0|',
                             20)],
          'code-line': '    m.use_release()\n',
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 31L,
          'sel-line-start': 907L,
          'selection_end': 924L,
          'selection_start': 913L,
          'zoom': 0L},
         1614819691.229361],
        [loc('tests/test_model.py'),
         {'attrib-starts': [],
          'code-line': '#test model\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 11L,
          'selection_start': 0L,
          'zoom': 0L},
         1614819695.742044],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             18),
                            ('deepforest|0|.use_release|0|',
                             51)],
          'code-line': '        self.model.load_state_dict(torch.load(self.s'\
                       'tate_dict,map_location=self.device))\n',
          'first-line': 52L,
          'folded-linenos': [],
          'sel-line': 59L,
          'sel-line-start': 1973L,
          'selection_end': 2061L,
          'selection_start': 2061L,
          'zoom': 0L},
         1614819708.999251]],
        20),
        'current-loc': loc('tests/test_main.py'),
        'editor-state-list': [(loc('deepforest/evaluate.py'),
                               {'attrib-starts': [('evaluate|0|',
        46)],
                                'code-line': '    return {"results":results,'\
        '"precision":precision, "recall":recall}',
                                'first-line': 25L,
                                'folded-linenos': [],
                                'sel-line': 83L,
                                'sel-line-start': 3516L,
                                'selection_end': 3545L,
                                'selection_start': 3538L,
                                'zoom': 0L}),
                              (loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame|0|',
        144),
        ('NDFrame|0|.__nonzero__|0|',
         1437)],
                                'code-line': '        raise ValueError(\n',
                                'first-line': 1424L,
                                'folded-linenos': [],
                                'sel-line': 1438L,
                                'sel-line-start': 44187L,
                                'selection_end': 44187L,
                                'selection_start': 44187L,
                                'zoom': 0L}),
                              (loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/fsspec/implementations/local.py'),
                               {'attrib-starts': [('LocalFileOpener|0|',
        190),
        ('LocalFileOpener|0|._open|0|',
         200)],
                                'code-line': '                self.f = open('\
        'self.path, mode=self.mode)\n',
                                'first-line': 185L,
                                'folded-linenos': [],
                                'sel-line': 203L,
                                'sel-line-start': 6677L,
                                'selection_end': 6677L,
                                'selection_start': 6677L,
                                'zoom': 0L}),
                              (loc('deepforest/main.py'),
                               {'attrib-starts': [('deepforest|0|',
        18),
        ('deepforest|0|.use_release|0|',
         51)],
                                'code-line': '        self.model.load_state_'\
        'dict(torch.load(self.state_dict,map_location=self.device))\n',
                                'first-line': 52L,
                                'folded-linenos': [],
                                'sel-line': 59L,
                                'sel-line-start': 1973L,
                                'selection_end': 2061L,
                                'selection_start': 2061L,
                                'zoom': 0L}),
                              (loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
                               {'attrib-starts': [('_forward_unimplemented|0'\
        '|',
        163)],
                                'code-line': '    raise NotImplementedError'\
        '\n',
                                'first-line': 169L,
                                'folded-linenos': [],
                                'sel-line': 174L,
                                'sel-line-start': 6828L,
                                'selection_end': 6828L,
                                'selection_start': 6828L,
                                'zoom': 0L}),
                              (loc('deepforest/data/OSBS_029.csv'),
                               {'attrib-starts': [],
                                'code-line': 'image_path,xmin,ymin,xmax,ymax'\
        ',label\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('deepforest/predict.py'),
                               {'attrib-starts': [('predict_image|0|',
        13)],
                                'code-line': '    prediction = model(image)'\
        '\n',
                                'first-line': 18L,
                                'folded-linenos': [],
                                'sel-line': 27L,
                                'sel-line-start': 879L,
                                'selection_end': 879L,
                                'selection_start': 879L,
                                'zoom': 0L}),
                              (loc('tests/test_main.py'),
                               {'attrib-starts': [('test_save_and_reload|0|',
        142)],
                                'code-line': '    #reload the checkpoint to '\
        'model object\n',
                                'first-line': 138L,
                                'folded-linenos': [],
                                'sel-line': 150L,
                                'sel-line-start': 5381L,
                                'selection_end': 5381L,
                                'selection_start': 5381L,
                                'zoom': 0L}),
                              (loc('tests/test_model.py'),
                               {'attrib-starts': [],
                                'code-line': '#test model\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 11L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('deepforest/visualize.py'),
                               {'attrib-starts': [('plot_prediction_and_targ'\
        'ets|0|',
        26)],
                                'code-line': '\n',
                                'first-line': 29L,
                                'folded-linenos': [],
                                'sel-line': 35L,
                                'sel-line-start': 1395L,
                                'selection_end': 1395L,
                                'selection_start': 1395L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('deepforest/evaluate.py'),
         loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/generic.py'),
         loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/fsspec/implementations/local.py'),
         loc('deepforest/main.py'),
         loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         loc('deepforest/data/OSBS_029.csv'),
         loc('deepforest/predict.py'),
         loc('tests/test_main.py'),
         loc('tests/test_model.py'),
         loc('deepforest/visualize.py')]),
                               'open_files': [u'deepforest/data/OSBS_029.csv',
        u'deepforest/visualize.py',
        u'deepforest/evaluate.py',
        u'deepforest/predict.py',
        u'tests/test_model.py',
        u'deepforest/main.py',
        u'tests/test_main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5064456721915286},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           2),
                          1614819671.575454),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1607965912.374172),
                 'user_data': {}},
        'window-alloc': (1792,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('tests/test_main.py'),
                           loc('deepforest/main.py'),
                           loc('tests/test_model.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/generic.py'),
                           loc('deepforest/predict.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/fsspec/implementations/local.py'),
                           loc('deepforest/evaluate.py'),
                           loc('deepforest/visualize.py'),
                           loc('deepforest/data/OSBS_029.csv')]
guimgr.visual-state = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {'a'\
        'ttrib-starts': [('RunInSingleDir|0|',
                          456)],
        'code-line': '        import pytest\n',
        'first-line': 454L,
        'folded-linenos': [],
        'sel-line': 466L,
        'sel-line-start': 16384L,
        'selection_end': 16405L,
        'selection_start': 16384L,
        'zoom': 0L},
                       loc('.travis.yml'): {'attrib-starts': [],
        'code-line': 'env: TRAVIS=true\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 460L,
        'selection_end': 476L,
        'selection_start': 476L,
        'zoom': 0L},
                       loc('_config.yml'): {'attrib-starts': [],
        'code-line': 'theme: jekyll-theme-slate',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('azure-pipelines.yml'): {'attrib-starts': [],
        'code-line': '  - script: |\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 799L,
        'selection_end': 812L,
        'selection_start': 812L,
        'zoom': 0L},
                       loc('deepforest/IoU.py'): {'attrib-starts': [('comput'\
        'e_IoU|0|',
        49)],
        'code-line': '    \n',
        'first-line': 70L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 3246L,
        'selection_end': 3250L,
        'selection_start': 3250L,
        'zoom': 0L},
                       loc('deepforest/callbacks.py'): {'attrib-starts': [('i'\
        'mages_callback|0|',
        12),
        ('images_callback|0|.__init__|0|',
         30)],
        'code-line': '    def __init__(self, csv_file, root_dir, savedir, n='\
                     '2, every_n_epochs =1):\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1236L,
        'selection_end': 1287L,
        'selection_start': 1287L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_528000_4978000_image_crop2.xml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    <filename>2019_YELL_2_528000_4978000_image_crop2.p'\
                     'ng</filename>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 39L,
        'selection_end': 95L,
        'selection_start': 95L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_541000_4977000_image_crop.tif'): {'a'\
        'ttrib-starts': [],
        'code-line': 'MM\0*\0\r',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_541000_4977000_image_crop.xml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    <filename>2019_YELL_2_541000_4977000_image_crop.pn'\
                     'g</filename>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 39L,
        'selection_end': 94L,
        'selection_start': 94L,
        'zoom': 0L},
                       loc('deepforest/data/OSBS_029.xml'): {'attrib-starts': [],
        'code-line': '        <height>400</height>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 114L,
        'selection_end': 142L,
        'selection_start': 142L,
        'zoom': 0L},
                       loc('deepforest/data/deepforest_config.yml'): {'attri'\
        'b-starts': [],
        'code-line': '### \n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/eval_example.csv'): {'attrib-sta'\
        'rts': [],
        'code-line': 'image_path,xmin,ymin,xmax,ymax,label\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/example.csv'): {'attrib-starts': [],
        'code-line': 'image_path,xmin,ymin,xmax,ymax,label\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/dataset.py'): {'attrib-starts': [('Tr'\
        'eeDataset|0|',
        31),
        ('TreeDataset|0|.__init__|0|',
         32)],
        'code-line': '        self.image_names = self.annotations.image_path'\
                     '.unique()\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1398L,
        'selection_end': 1452L,
        'selection_start': 1442L,
        'zoom': 0L},
                       loc('deepforest/deepforest.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/engine.py'): {'attrib-starts': [],
        'code-line': 'from coco_eval import CocoEvaluator\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 256L,
        'selection_end': 291L,
        'selection_start': 291L,
        'zoom': 0L},
                       loc('deepforest/evaluate.py'): {'attrib-starts': [('e'\
        'valuate|0|',
        47)],
        'code-line': '        plot_ground_truth = ground_df[ground_df["image'\
                     '_path"] == image_path]\n',
        'first-line': 49L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2776L,
        'selection_end': 2813L,
        'selection_start': 2804L,
        'zoom': 0L},
                       loc('deepforest/main.py'): {'attrib-starts': [('deepf'\
        'orest|0|',
        18),
        ('deepforest|0|.test_epoch_end|0|',
         286)],
        'code-line': '            project=self.config["validation"]["project'\
                     '"],\n',
        'first-line': 287L,
        'folded-linenos': [],
        'sel-line': 299L,
        'sel-line-start': 12158L,
        'selection_end': 12214L,
        'selection_start': 12214L,
        'zoom': 0L},
                       loc('deepforest/model.py'): {'attrib-starts': [('crea'\
        'te_model|0|',
        24)],
        'code-line': '    model.score_thresh = score_thresh\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 1120L,
        'selection_end': 1157L,
        'selection_start': 1145L,
        'zoom': 0L},
                       loc('deepforest/predict.py'): {'attrib-starts': [('pr'\
        'edict_file|0|',
        49)],
        'code-line': 'def predict_file(model,csv_file,root_dir, savedir, dev'\
                     'ice):\n',
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 49L,
        'sel-line-start': 1585L,
        'selection_end': 1601L,
        'selection_start': 1589L,
        'zoom': 0L},
                       loc('deepforest/preprocess.py'): {'attrib-starts': [('p'\
        'reprocess_image|0|',
        14)],
        'code-line': 'def preprocess_image(image):   \n',
        'first-line': 188L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 299L,
        'selection_end': 319L,
        'selection_start': 303L,
        'zoom': 0L},
                       loc('deepforest/retinanet_train.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/train.py'): {'attrib-starts': [('trai'\
        'n|0|',
        2)],
        'code-line': '        config: a deepforest config object\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 226L,
        'selection_end': 268L,
        'selection_start': 268L,
        'zoom': 0L},
                       loc('deepforest/training.py'): {'attrib-starts': [('r'\
        'un|0|',
        52)],
        'code-line': '    \n',
        'first-line': 79L,
        'folded-linenos': [],
        'sel-line': 90L,
        'sel-line-start': 3553L,
        'selection_end': 3557L,
        'selection_start': 3557L,
        'zoom': 0L},
                       loc('deepforest/training_utils.py'): {'attrib-starts': [('M'\
        'etricLogger|0|',
        144),
        ('MetricLogger|0|.synchronize_between_processes|0|',
         172)],
        'code-line': '        for meter in self.meters.values():\n',
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 173L,
        'sel-line-start': 5085L,
        'selection_end': 5121L,
        'selection_start': 5121L,
        'zoom': 0L},
                       loc('deepforest/transforms.py'): {'attrib-starts': [('T'\
        'oTensor|0|',
        29),
        ('ToTensor|0|.__call__|0|',
         30)],
        'code-line': '        image = F.to_tensor(image).float()\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 904L,
        'selection_end': 945L,
        'selection_start': 945L,
        'zoom': 0L},
                       loc('deepforest/utilities.py'): {'attrib-starts': [('p'\
        'roject_boxes|0|',
        236)],
        'code-line': 'def project_boxes(df, root_dir, transform = True):\n',
        'first-line': 229L,
        'folded-linenos': [],
        'sel-line': 236L,
        'sel-line-start': 7822L,
        'selection_end': 7839L,
        'selection_start': 7826L,
        'zoom': 0L},
                       loc('deepforest/visualize.py'): {'attrib-starts': [('p'\
        'lot_prediction_and_targets|0|',
        26)],
        'code-line': '    plot, ax = plot_predictions(image, prediction_df)'\
                     '\n',
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 1117L,
        'selection_end': 1168L,
        'selection_start': 1168L,
        'zoom': 0L},
                       loc('deepforest_config.yml'): {'attrib-starts': [],
        'code-line': 'score_thresh: 0.1\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 206L,
        'selection_end': 223L,
        'selection_start': 223L,
        'zoom': 0L},
                       loc('docs/conf.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('docs/training.md'): {'attrib-starts': [],
        'code-line': '# Training models\n',
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'code-line': '  - pytorch_lightning\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 235L,
        'selection_end': 256L,
        'selection_start': 256L,
        'zoom': 0L},
                       loc('evaluate.py'): {'attrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 12L,
        'selection_start': 12L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('deepforest|0|',
        7),
        ('deepforest|0|.__init__|0|',
         10)],
        'code-line': '        # if not use installed.\n',
        'first-line': 120L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 413L,
        'selection_end': 444L,
        'selection_start': 444L,
        'zoom': 0L},
                       loc('requirements.txt'): {'attrib-starts': [],
        'code-line': 'tqdm\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 225L,
        'selection_end': 229L,
        'selection_start': 229L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': '      install_requires=[\n',
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 1699L,
        'selection_end': 1723L,
        'selection_start': 1723L,
        'zoom': 0L},
                       loc('tests/test_callbacks.py'): {'attrib-starts': [],
        'code-line': 'from deepforest import get_data\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 114L,
        'selection_end': 114L,
        'selection_start': 114L,
        'zoom': 0L},
                       loc('tests/test_data.py'): {'attrib-starts': [],
        'code-line': '# test data locations and existance\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dataset.py'): {'attrib-starts': [],
        'code-line': '#test dataset model\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 19L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_deepforest.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_environment.py'): {'attrib-starts': [('t'\
        'est_environment|0|',
        3)],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 123L,
        'selection_end': 123L,
        'selection_start': 123L,
        'zoom': 0L},
                       loc('tests/test_keras_retinanet.py'): {'attrib-starts': [],
        'code-line': '# test loading of keras retinanet\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 33L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_main.py'): {'attrib-starts': [('test_'\
        'evaluate|0|',
        112)],
        'code-line': '    results = m.evaluate(csv_file, root_dir, iou_thres'\
                     'hold = 0.4, show_plot=True)\n',
        'first-line': 104L,
        'folded-linenos': [],
        'sel-line': 116L,
        'sel-line-start': 4237L,
        'selection_end': 4237L,
        'selection_start': 4237L,
        'zoom': 0L},
                       loc('tests/test_model.py'): {'attrib-starts': [('test'\
        '_create_model|0|',
        11)],
        'code-line': '    retinanet_model = model.create_model(num_classes=2'\
                     ',nms_thresh=0.1, score_thresh=0.2)\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 260L,
        'selection_end': 347L,
        'selection_start': 347L,
        'zoom': 0L},
                       loc('tests/test_preprocess.py'): {'attrib-starts': [('t'\
        'est_split_large_tile|0|',
        134)],
        'code-line': 'def test_split_large_tile(tmpdir):\n',
        'first-line': 132L,
        'folded-linenos': [],
        'sel-line': 134L,
        'sel-line-start': 4691L,
        'selection_end': 4720L,
        'selection_start': 4720L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_utilities.py'): {'attrib-starts': [('t'\
        'est_xml_to_annotations|0|',
        18)],
        'code-line': '    #release_tag, weights = utilities.use_release()\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 678L,
        'selection_end': 729L,
        'selection_start': 729L,
        'zoom': 0L},
                       loc('tests/test_visualize.py'): {'attrib-starts': [('t'\
        'est_plot_predictions_and_targets|0|',
        36)],
        'code-line': '    for path, image, target, prediction in zip(paths, '\
                     'images, targets, predictions):\n',
        'first-line': 34L,
        'folded-linenos': [],
        'sel-line': 42L,
        'sel-line-start': 1284L,
        'selection_end': 1349L,
        'selection_start': 1349L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/data/eval_example.csv'): {'a'\
        'ttrib-starts': [],
        'code-line': 'image_path,xmin,ymin,xmax,ymax,label\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'from deepforest.retinanet_train import main as retinan'\
                     'et_train\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 631L,
        'selection_end': 662L,
        'selection_start': 662L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_deepforest.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'from .conftest import download_release\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 364L,
        'selection_end': 402L,
        'selection_start': 386L,
        'zoom': 0L},
                       loc('../DeepForest_Model/callbacks.py'): {'attrib-sta'\
        'rts': [('comet_callbacks|0|',
                 4),
                ('comet_callbacks|0|.on_epoch_end|0|',
                 19)],
        'code-line': '        \n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 803L,
        'selection_end': 811L,
        'selection_start': 811L,
        'zoom': 0L},
                       loc('../DeepForest_Model/deepforest_config.yml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    iou_threshold: 0.4\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 909L,
        'selection_end': 931L,
        'selection_start': 931L,
        'zoom': 0L},
                       loc('../DeepForest_Model/example_prediction.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'm.model = torch.load("snapshots/hand_annotated_model.p'\
                     't", map_location = torch.device("cpu"))\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 171L,
        'selection_end': 264L,
        'selection_start': 264L,
        'zoom': 0L},
                       loc('../DeepForest_Model/pretraining.py'): {'attrib-s'\
        'tarts': [],
        'code-line': 'from callbacks import comet_callbacks\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 28L,
        'selection_end': 65L,
        'selection_start': 50L,
        'zoom': 0L},
                       loc('../DeepForest_Model/src/crops.py'): {'attrib-sta'\
        'rts': [('shapefile_to_annotations|0|',
                 16)],
        'code-line': 'def shapefile_to_annotations(shapefile, rgb, savedir="'\
                     '."):\n',
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 326L,
        'selection_end': 2134L,
        'selection_start': 326L,
        'zoom': 0L},
                       loc('../DeepForest_Model/tests/test_generate.py'): {'a'\
        'ttrib-starts': [('test_shapefile_to_annotations|0|',
                          6)],
        'code-line': '    df = crops.shapefile_to_annotations(shapefile="/Us'\
                     'ers/benweinstein/Downloads/temp_training/2019_OSBS_5_4'\
                     '10000_3282000_image_crop.shp", rgb="/Users/benweinstei'\
                     'n/Downloads/temp_training/2019_OSBS_5_410000_3282000_i'\
                     'mage_crop.tif")\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 142L,
        'selection_end': 1008L,
        'selection_start': 142L,
        'zoom': 0L},
                       loc('../DeepForest_Model/train.py'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 851L,
        'selection_end': 851L,
        'selection_start': 851L,
        'zoom': 0L},
                       loc('../DeepTreeAttention/tests/test_trees.py'): {'at'\
        'trib-starts': [],
        'code-line': "is_travis = 'TRAVIS' in os.environ\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 124L,
        'selection_end': 349L,
        'selection_start': 124L,
        'zoom': 0L},
                       loc('../NeonTreeEvaluation/evaluation/RGB/benchmark_annotations.csv'): {'a'\
        'ttrib-starts': [],
        'code-line': 'SJER_045.tif,214,308,251,354,Tree\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 530L,
        'selection_end': 563L,
        'selection_start': 563L,
        'zoom': 0L},
                       loc('../NeonTreeEvaluation_python/src/get_data.py'): {'a'\
        'ttrib-starts': [('load_ground_truth|0|',
                          47)],
        'code-line': '    geo_ground_truth = utilities.project_boxes(ground_'\
                     'truth)\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1938L,
        'selection_end': 1998L,
        'selection_start': 1961L,
        'zoom': 0L},
                       loc('../deepforest-feedstock/conda-forge.yml'): {'att'\
        'rib-starts': [],
        'code-line': 'conda_forge_output_validation: true\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../deepforest-feedstock/recipe/meta.yaml'): {'at'\
        'trib-starts': [],
        'code-line': '    - tensorflow ==1.14.0\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 962L,
        'selection_end': 987L,
        'selection_start': 987L,
        'zoom': 0L},
                       loc('../vision/references/classification/train.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 39L,
        'selection_end': 49L,
        'selection_start': 49L,
        'zoom': 0L},
                       loc('../vision/references/classification/train_quantization.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import copy\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 38L,
        'selection_end': 38L,
        'selection_start': 38L,
        'zoom': 0L},
                       loc('../vision/references/classification/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 141L,
        'selection_end': 141L,
        'selection_start': 141L,
        'zoom': 0L},
                       loc('../vision/references/detection/coco_eval.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import json\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/detection/coco_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import copy\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/detection/engine.py'): {'at'\
        'trib-starts': [('_get_iou_types|0|',
                         57)],
        'code-line': '    if isinstance(model, torch.nn.parallel.Distributed'\
                     'DataParallel):\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1810L,
        'selection_end': 1844L,
        'selection_start': 1841L,
        'zoom': 0L},
                       loc('../vision/references/detection/group_by_aspect_ratio.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import bisect\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/detection/train.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import torchvision\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 952L,
        'selection_end': 952L,
        'selection_start': 952L,
        'zoom': 0L},
                       loc('../vision/references/detection/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 14L,
        'selection_end': 14L,
        'selection_start': 14L,
        'zoom': 0L},
                       loc('../vision/references/detection/utils.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import errno\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 133L,
        'selection_end': 145L,
        'selection_start': 145L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/coco_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from pycocotools import mask as coco_mask\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 102L,
        'selection_end': 115L,
        'selection_start': 115L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/train.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch.utils.data\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 52L,
        'selection_end': 61L,
        'selection_start': 61L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import random\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 41L,
        'selection_end': 46L,
        'selection_start': 46L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import defaultdict, deque\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/similarity/loss.py'): {'att'\
        'rib-starts': [],
        'code-line': "'''\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 128L,
        'selection_end': 131L,
        'selection_start': 131L,
        'zoom': 0L},
                       loc('../vision/references/similarity/model.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import torch.nn as nn\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/similarity/sampler.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 108L,
        'selection_end': 108L,
        'selection_start': 108L,
        'zoom': 0L},
                       loc('../vision/references/similarity/test.py'): {'att'\
        'rib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 179L,
        'selection_end': 179L,
        'selection_start': 179L,
        'zoom': 0L},
                       loc('../vision/references/similarity/train.py'): {'at'\
        'trib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 184L,
        'selection_end': 184L,
        'selection_start': 184L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/scheduler.py'): {'a'\
        'ttrib-starts': [('WarmupMultiStepLR|0|',
                          4)],
        'code-line': 'class WarmupMultiStepLR(torch.optim.lr_scheduler._LRSc'\
                     'heduler):\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 47L,
        'selection_end': 88L,
        'selection_start': 88L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/train.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torch.utils.data.dataloader import default_collat'\
                     'e\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 75L,
        'selection_end': 91L,
        'selection_start': 91L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import defaultdict, deque\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/caltech.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/celeba.py'): {'at'\
        'trib-starts': [],
        'code-line': 'from functools import partial\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/cifar.py'): {'att'\
        'rib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/cityscapes.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from typing import Any, Callable, Dict, List, Optional'\
                     ', Union, Tuple\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 57L,
        'selection_end': 57L,
        'selection_start': 57L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/coco.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'from .vision import VisionDataset\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/fakedata.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/flickr.py'): {'at'\
        'trib-starts': [],
        'code-line': 'from collections import defaultdict\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/folder.py'): {'at'\
        'trib-starts': [],
        'code-line': 'from .vision import VisionDataset\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/hmdb51.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import glob\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/imagenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import tempfile\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 78L,
        'selection_end': 93L,
        'selection_start': 93L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/kinetics.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from .utils import list_dir\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/lsun.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'import string\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 91L,
        'selection_end': 104L,
        'selection_start': 104L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/mnist.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 72L,
        'selection_end': 81L,
        'selection_start': 81L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/omniglot.py'): {'a'\
        'ttrib-starts': [('Omniglot|0|',
                          7)],
        'code-line': '            creates from the "evaluation" set. This te'\
                     'rminology is defined by the authors.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 537L,
        'selection_end': 601L,
        'selection_start': 601L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/phototour.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 115L,
        'selection_end': 127L,
        'selection_start': 127L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/places365.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/sbd.py'): {'attri'\
        'b-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/sbu.py'): {'attri'\
        'b-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/semeion.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/stl10.py'): {'att'\
        'rib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/svhn.py'): {'attr'\
        'ib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 215L,
        'selection_end': 215L,
        'selection_start': 215L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/ucf101.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/usps.py'): {'attr'\
        'ib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 175L,
        'selection_end': 175L,
        'selection_start': 175L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/utils.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import tarfile\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 52L,
        'selection_end': 52L,
        'selection_start': 52L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/video_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    _read_video_from_file,\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 168L,
        'selection_end': 194L,
        'selection_start': 194L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/vision.py'): {'at'\
        'trib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 112L,
        'selection_end': 112L,
        'selection_start': 112L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/voc.py'): {'attri'\
        'b-starts': [],
        'code-line': 'from .utils import download_url, verify_str_arg\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 197L,
        'selection_end': 228L,
        'selection_start': 228L,
        'zoom': 0L},
                       loc('../vision/torchvision/io/image.py'): {'attrib-st'\
        'arts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 73L,
        'selection_end': 73L,
        'selection_start': 73L,
        'zoom': 0L},
                       loc('../vision/torchvision/io/video.py'): {'attrib-st'\
        'arts': [],
        'code-line': '        av = ImportError(\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 329L,
        'selection_end': 354L,
        'selection_start': 354L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/alexnet.py'): {'att'\
        'rib-starts': [],
        'code-line': 'model_urls = {\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 139L,
        'selection_end': 153L,
        'selection_start': 153L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/densenet.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import re\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/anchor_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# Copyright (c) Facebook, Inc. and its affiliates. All'\
                     ' Rights Reserved.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/backbone_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/faster_rcnn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch.nn.functional as F\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 71L,
        'selection_end': 102L,
        'selection_start': 102L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/generalized_rcnn.py'): {'a'\
        'ttrib-starts': [('GeneralizedRCNN|0|',
                          12),
                         ('GeneralizedRCNN|0|.eager_outputs|0|',
                          35)],
        'code-line': '        # type: (Dict[str, Tensor], List[Dict[str, Ten'\
                     'sor]]) -> Union[Dict[str, Tensor], List[Dict[str, Tens'\
                     'or]]]\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1056L,
        'selection_end': 1113L,
        'selection_start': 1107L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/image_list.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# Copyright (c) Facebook, Inc. and its affiliates. All'\
                     ' Rights Reserved.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/keypoint_rcnn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torchvision.ops import MultiScaleRoIAlign\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 35L,
        'selection_end': 81L,
        'selection_start': 81L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/mask_rcnn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '__all__ = [\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 307L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/retinanet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from typing import Dict, List, Tuple, Optional\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 107L,
        'selection_end': 153L,
        'selection_start': 145L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/roi_heads.py'): {'a'\
        'ttrib-starts': [('RoIHeads|0|',
                          484),
                         ('RoIHeads|0|.check_targets|0|',
                          619)],
        'code-line': '        # type: (Optional[List[Dict[str, Tensor]]]) ->'\
                     ' None\n',
        'first-line': 607L,
        'folded-linenos': [],
        'sel-line': 620L,
        'sel-line-start': 22884L,
        'selection_end': 22909L,
        'selection_start': 22901L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/rpn.py'): {'a'\
        'ttrib-starts': [('RegionProposalNetwork|0|',
                          103),
                         ('RegionProposalNetwork|0|.pre_nms_top_n|0|',
                          167)],
        'code-line': '    def pre_nms_top_n(self):\n',
        'first-line': 157L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 6362L,
        'selection_end': 6379L,
        'selection_start': 6379L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/transform.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 157L,
        'selection_end': 157L,
        'selection_start': 157L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/googlenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/inception.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import namedtuple\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/mnasnet.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/mobilenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 90L,
        'selection_end': 90L,
        'selection_start': 90L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/mobilenetv2.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torch import nn\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/resnet.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/segmentation/deeplabv3.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/segmentation/fcn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torch import nn\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/segmentation/segmentation.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 279L,
        'selection_end': 279L,
        'selection_start': 279L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/shufflenetv2.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/squeezenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/utils.py'): {'attri'\
        'b-starts': [],
        'code-line': 'try:\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/vgg.py'): {'attrib-'\
        'starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/video/resnet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from ..utils import load_state_dict_from_url\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 23L,
        'selection_end': 69L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/_box_convert.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/_register_onnx_ops.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import sys\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/_utils.py'): {'attrib-'\
        'starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/boxes.py'): {'attrib-s'\
        'tarts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/deform_conv.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import math\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/feature_pyramid_network.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import OrderedDict\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/focal_loss.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/misc.py'): {'attrib-st'\
        'arts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 328L,
        'selection_end': 328L,
        'selection_start': 328L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/poolers.py'): {'attrib'\
        '-starts': [],
        'code-line': '# Copyright (c) Facebook, Inc. and its affiliates. All'\
                     ' Rights Reserved.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/ps_roi_align.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/ps_roi_pool.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/roi_align.py'): {'attr'\
        'ib-starts': [('roi_align|0|',
                       10)],
        'code-line': 'def roi_align(\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 260L,
        'selection_end': 274L,
        'selection_start': 274L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/roi_pool.py'): {'attri'\
        'b-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/autoaugment.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import math\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/functional.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import math\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/functional_pil.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import numbers\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/functional_tensor.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from .functional import InterpolationMode, _interpolat'\
                     'ion_modes_from_int\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 271L,
        'selection_end': 312L,
        'selection_start': 295L,
        'zoom': 0L},
                       loc('../../Downloads/tv-training-code.py'): {'attrib-'\
        'starts': [],
        'code-line': 'from engine import train_one_epoch, evaluate\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 372L,
        'selection_end': 383L,
        'selection_start': 377L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/outcomes.py'): {'a'\
        'ttrib-starts': [('fail|0|',
                          142)],
        'code-line': '    raise Failed(msg=msg, pytrace=pytrace)\n',
        'first-line': 142L,
        'folded-linenos': [],
        'sel-line': 152L,
        'sel-line-start': 4855L,
        'selection_end': 4855L,
        'selection_start': 4855L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('pytest_pyfunc_call|0|',
                          176)],
        'code-line': '    result = testfunction(**testargs)\n',
        'first-line': 177L,
        'folded-linenos': [],
        'sel-line': 182L,
        'sel-line-start': 6346L,
        'selection_end': 6346L,
        'selection_start': 6346L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('rollaxis|0|',
                          1218)],
        'code-line': '    return a.transpose(axes)\n',
        'first-line': 1285L,
        'folded-linenos': [],
        'sel-line': 1304L,
        'sel-line-start': 39880L,
        'selection_end': 39880L,
        'selection_start': 39880L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/frame.py'): {'a'\
        'ttrib-starts': [('DataFrame|0|',
                          393),
                         ('DataFrame|0|.groupby|0|',
                          6683)],
        'code-line': '        return DataFrameGroupBy(\n',
        'first-line': 6684L,
        'folded-linenos': [],
        'sel-line': 6713L,
        'sel-line-start': 232104L,
        'selection_end': 232104L,
        'selection_start': 232104L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/groupby/groupby.py'): {'a'\
        'ttrib-starts': [('BaseGroupBy|0|',
                          498),
                         ('BaseGroupBy|0|.__init__|0|',
                          517)],
        'code-line': '            grouper, exclusions, obj = get_grouper(\n',
        'first-line': 530L,
        'folded-linenos': [],
        'sel-line': 559L,
        'sel-line-start': 16963L,
        'selection_end': 16963L,
        'selection_start': 16963L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/groupby/grouper.py'): {'a'\
        'ttrib-starts': [('get_grouper|0|',
                          639)],
        'code-line': '                raise KeyError(gpr)\n',
        'first-line': 805L,
        'folded-linenos': [],
        'sel-line': 815L,
        'sel-line-start': 28664L,
        'selection_end': 28664L,
        'selection_start': 28664L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/indexes/range.py'): {'a'\
        'ttrib-starts': [('RangeIndex|0|',
                          37),
                         ('RangeIndex|0|.get_loc|0|',
                          345)],
        'code-line': '                    raise KeyError(key) from err\n',
        'first-line': 337L,
        'folded-linenos': [],
        'sel-line': 352L,
        'sel-line-start': 9857L,
        'selection_end': 9857L,
        'selection_start': 9857L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_LocationIndexer|0|',
                          596),
                         ('_LocationIndexer|0|.__getitem__|0|',
                          880)],
        'code-line': '            return self._getitem_tuple(key)\n',
        'first-line': 882L,
        'folded-linenos': [],
        'sel-line': 887L,
        'sel-line-start': 27993L,
        'selection_end': 27993L,
        'selection_start': 27993L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/reshape/concat.py'): {'a'\
        'ttrib-starts': [('_Concatenator|0|',
                          300),
                         ('_Concatenator|0|.__init__|0|',
                          305)],
        'code-line': '        if isinstance(objs, (ABCSeries, ABCDataFrame, '\
                     'str)):\n',
        'first-line': 294L,
        'folded-linenos': [],
        'sel-line': 318L,
        'sel-line-start': 9054L,
        'selection_end': 9114L,
        'selection_start': 9114L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/io/common.py'): {'a'\
        'ttrib-starts': [('_is_binary_mode|0|',
                          823)],
        'code-line': '    return isinstance(handle, tuple(binary_classes)) o'\
                     'r "b" in getattr(\n',
        'first-line': 811L,
        'folded-linenos': [],
        'sel-line': 828L,
        'sel-line-start': 26969L,
        'selection_end': 26969L,
        'selection_start': 26969L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pluggy/callers.py'): {'a'\
        'ttrib-starts': [('_multicall|0|',
                          156)],
        'code-line': '        return outcome.get_result()\n',
        'first-line': 186L,
        'folded-linenos': [],
        'sel-line': 207L,
        'sel-line-start': 6784L,
        'selection_end': 6784L,
        'selection_start': 6784L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py'): {'a'\
        'ttrib-starts': [('CheckpointConnector|0|',
                          37),
                         ('CheckpointConnector|0|.dump_checkpoint|0|',
                          223)],
        'code-line': "        checkpoint['state_dict'] = model.state_dict()"\
                     "\n",
        'first-line': 270L,
        'folded-linenos': [],
        'sel-line': 293L,
        'sel-line-start': 12461L,
        'selection_end': 12461L,
        'selection_start': 12461L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/evaluation_loop.py'): {'a'\
        'ttrib-starts': [('EvaluationLoop|0|',
                          23),
                         ('EvaluationLoop|0|.__run_eval_epoch_end|0|',
                          221)],
        'code-line': '                eval_results = model.test_epoch_end(ev'\
                     'al_results)\n',
        'first-line': 228L,
        'folded-linenos': [],
        'sel-line': 237L,
        'sel-line-start': 8957L,
        'selection_end': 9021L,
        'selection_start': 9009L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py'): {'a'\
        'ttrib-starts': [('Trainer|0|',
                          71),
                         ('Trainer|0|.fit|0|',
                          411)],
        'code-line': '        results = self.accelerator_backend.train()\n',
        'first-line': 464L,
        'folded-linenos': [],
        'sel-line': 469L,
        'sel-line-start': 21177L,
        'selection_end': 21177L,
        'selection_start': 21177L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py'): {'a'\
        'ttrib-starts': [('TrainLoop|0|',
                          37),
                         ('TrainLoop|0|.run_training_batch|0|',
                          641),
                         ('TrainLoop|0|.run_training_batch|0|.train_step_and'\
                          '_backward_closure|0|',
                          706)],
        'code-line': '                            result = self.training_ste'\
                     'p_and_backward(\n',
        'first-line': 692L,
        'folded-linenos': [],
        'sel-line': 707L,
        'sel-line-start': 29056L,
        'selection_end': 29056L,
        'selection_start': 29056L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/tifffile/tifffile.py'): {'a'\
        'ttrib-starts': [('TiffPage|0|',
                          5228),
                         ('TiffPage|0|.decode|0|',
                          5577),
                         ('TiffPage|0|.decode|0|.decode|1|',
                          5925)],
        'code-line': "                raise ValueError(f'TiffPage {self.inde"\
                     "x}: {exc}')\r\n",
        'first-line': 5612L,
        'folded-linenos': [],
        'sel-line': 5633L,
        'sel-line-start': 217235L,
        'selection_end': 217235L,
        'selection_start': 217235L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/conv.py'): {'a'\
        'ttrib-starts': [('Conv2d|0|',
                          261),
                         ('Conv2d|0|._conv_forward|0|',
                          413)],
        'code-line': '        return F.conv2d(input, weight, self.bias, self'\
                     '.stride,\n',
        'first-line': 395L,
        'folded-linenos': [],
        'sel-line': 418L,
        'sel-line-start': 18107L,
        'selection_end': 18107L,
        'selection_start': 18107L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'): {'a'\
        'ttrib-starts': [('_forward_unimplemented|0|',
                          163)],
        'code-line': '    raise NotImplementedError\n',
        'first-line': 169L,
        'folded-linenos': [],
        'sel-line': 174L,
        'sel-line-start': 6828L,
        'selection_end': 6828L,
        'selection_start': 6828L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/optim/sgd.py'): {'a'\
        'ttrib-starts': [('SGD|0|',
                          4),
                         ('SGD|0|.step|0|',
                          75)],
        'code-line': '                loss = closure()\n',
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 85L,
        'sel-line-start': 3243L,
        'selection_end': 3243L,
        'selection_start': 3243L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py'): {'a'\
        'ttrib-starts': [('default_collate|0|',
                          41)],
        'code-line': '        return {key: default_collate([d[key] for d in '\
                     'batch]) for key in elem}\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 72L,
        'sel-line-start': 2926L,
        'selection_end': 2926L,
        'selection_start': 2926L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py'): {'a'\
        'ttrib-starts': [('_BaseDatasetFetcher|0|',
                          6),
                         ('_BaseDatasetFetcher|0|.fetch|0|',
                          13)],
        'code-line': '        raise NotImplementedError()\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 511L,
        'selection_end': 546L,
        'selection_start': 546L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchsummary/torchsummary.py'): {'a'\
        'ttrib-starts': [('summary|0|',
                          8),
                         ('summary|0|.register_hook|0|',
                          10),
                         ('summary|0|.register_hook|0|.hook|0|',
                          12)],
        'code-line': '            summary[m_key]["input_shape"] = list(input'\
                     '[0].size())\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 482L,
        'selection_end': 482L,
        'selection_start': 482L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'): {'a'\
        'ttrib-starts': [('RetinaNet|0|',
                          243),
                         ('RetinaNet|0|.forward|0|',
                          483)],
        'code-line': '        for img in images:\n',
        'first-line': 501L,
        'folded-linenos': [],
        'sel-line': 515L,
        'sel-line-start': 22606L,
        'selection_end': 22606L,
        'selection_start': 22606L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/transforms/transforms.py'): {'a'\
        'ttrib-starts': [('Resize|0|',
                          231),
                         ('Resize|0|.__init__|0|',
                          249)],
        'code-line': '            raise ValueError("If size is a sequence, i'\
                     't should have 1 or 2 values")\n',
        'first-line': 233L,
        'folded-linenos': [],
        'sel-line': 254L,
        'sel-line-start': 9069L,
        'selection_end': 9152L,
        'selection_start': 9069L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/Tree_Zooniverse/lib/python3.7/csv.py'): {'a'\
        'ttrib-starts': [('DictReader|0|',
                          80),
                         ('DictReader|0|.fieldnames|0|',
                          104)],
        'code-line': '        return self._fieldnames\n',
        'first-line': 91L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3015L,
        'selection_end': 3046L,
        'selection_start': 3046L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.initial-dir = {None: ('custom',
                           u'/Users/benweinstein/Documents/DeepForest-pytorch')}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/bin/python3')}
proj.pypath = {None: ('custom',
                      [])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.replace-history = [u'format_boxes']
search.search-history = [u'use_release',
                         u'save_model',
                         u'score_',
                         u'score_treshold',
                         u'score_tre',
                         u'm.evaluate',
                         u'score_threshold',
                         u'evaluate',
                         u'log_ass',
                         u'project',
                         u'project_boxes',
                         u'shuffle',
                         u'torch',
                         u'format_',
                         u'format_predictions',
                         u'score_th',
                         u'create_model',
                         u'prediction',
                         u'load',
                         u'trainer.fit']
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_data.py',
                            [('test_get_data',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_dataset.py',
                            [('test_TreeDataset_transform[True]',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              26),
                             ('test_TreeDataset_transform[False]',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              26),
                             ('test_TreeDataset',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_preprocess.py',
                            [('test_split_raster_empty',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              87),
                             ('test_select_annotations_tile',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              60),
                             ('test_split_raster',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              76),
                             ('test_split_size_error',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              127),
                             ('test_compute_windows',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              39),
                             ('test_select_annotations',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              45)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_environment.py',
                            [('test_environment',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              3)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_model.py',
                            [('test_create_model',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              11),
                             ('test_load_backbone',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              5)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                            [('test_train_callbacks',
                              'running',
                              None,
                              None,
                              None,
                              None,
                              None),
                             ('test_predict_tile',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError(\"assert False"\
                               "\\n +  where False = isinstance(None, <class"\
                               " 'pandas.core.frame.DataFrame'>)\\n +    whe"\
                               "re <class 'pandas.core.frame.DataFrame'> = p"\
                               "d.DataFrame\") tblen=1>",
                               "AssertionError: assert False\n +  where Fals"\
                               "e = isinstance(None, <class 'pandas.core.fra"\
                               "me.DataFrame'>)\n +    where <class 'pandas."\
                               "core.frame.DataFrame'> = pd.DataFrame",
                               [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/tests/test_main.py',
                                 84,
                                 'test_predict_tile',
                                 None,
                                 '    assert isinstance(prediction, pd.DataF'\
                                 'rame)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1614819554,
                              76),
                             ('test_save_and_reload',
                              'running',
                              None,
                              None,
                              None,
                              None,
                              None),
                             ('test_predict_return_plot',
                              0,
                              None,
                              None,
                              None,
                              1614819554,
                              62),
                             ('test_predict_image_empty',
                              0,
                              None,
                              None,
                              None,
                              1614819554,
                              41),
                             ('test_predict_file',
                              0,
                              None,
                              None,
                              None,
                              1614819554,
                              68),
                             ('test_train',
                              0,
                              None,
                              None,
                              None,
                              1614819554,
                              38),
                             ('test_predict_image_fromfile',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError(\"assert False"\
                               "\\n +  where False = isinstance(None, <class"\
                               " 'pandas.core.frame.DataFrame'>)\\n +    whe"\
                               "re <class 'pandas.core.frame.DataFrame'> = p"\
                               "d.DataFrame\") tblen=1>",
                               "AssertionError: assert False\n +  where Fals"\
                               "e = isinstance(None, <class 'pandas.core.fra"\
                               "me.DataFrame'>)\n +    where <class 'pandas."\
                               "core.frame.DataFrame'> = pd.DataFrame",
                               [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/tests/test_main.py',
                                 52,
                                 'test_predict_image_fromfile',
                                 None,
                                 '    assert isinstance(prediction, pd.DataF'\
                                 'rame)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1614819554,
                              47),
                             ('test_evaluate',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError('assert 0 == 0"\
                               ".66\\n +  where 0 = <function round_ at 0x7f"\
                               "a8d80f5d30>(0, 2)\\n +    where <function ro"\
                               "und_ at 0x7fa8d80f5d30> = np.round') tblen=1"\
                               ">",
                               'AssertionError: assert 0 == 0.66\n +  where '\
                               '0 = <function round_ at 0x7fa8d80f5d30>(0, 2'\
                               ')\n +    where <function round_ at 0x7fa8d80'\
                               'f5d30> = np.round',
                               [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/tests/test_main.py',
                                 120,
                                 'test_evaluate',
                                 None,
                                 '    assert np.round(results["precision"],2'\
                                 ') == 0.66')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1614819554,
                              112),
                             ('test_predict_image_fromarray',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError(\"assert False"\
                               "\\n +  where False = isinstance(None, <class"\
                               " 'pandas.core.frame.DataFrame'>)\\n +    whe"\
                               "re <class 'pandas.core.frame.DataFrame'> = p"\
                               "d.DataFrame\") tblen=1>",
                               "AssertionError: assert False\n +  where Fals"\
                               "e = isinstance(None, <class 'pandas.core.fra"\
                               "me.DataFrame'>)\n +    where <class 'pandas."\
                               "core.frame.DataFrame'> = pd.DataFrame",
                               [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/tests/test_main.py',
                                 60,
                                 'test_predict_image_fromarray',
                                 None,
                                 '    assert isinstance(prediction, pd.DataF'\
                                 'rame)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1614819554,
                              54),
                             ('test_main',
                              0,
                              None,
                              None,
                              None,
                              1614819554,
                              35)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_visualize.py',
                            [('test_format_boxes',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              26),
                             ('test_plot_predictions_and_targets',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              36)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_utilities.py',
                            [('test_xml_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              18),
                             ('test_float_warning',
                              0,
                              None,
                              None,
                              None,
                              1614717355,
                              33)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_callbacks.py',
                            [('test_log_images',
                              0,
                              None,
                              None,
                              None,
                              1614722947,
                              25)])],
                          {u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py': (u'Test process aborted: some tests were not run',
        1614819554),
                           u'/Users/benweinstein/Documents/DeepForest/tests/test_deepforest.py': (u'Test process aborted: some tests were not run',
        1607966490)})

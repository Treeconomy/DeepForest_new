#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.err-values = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {}}
debug.exceptions-ignored = {loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1514: True},
                            loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/config/__init__.py'): {1514: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BeCfPquEZeqQ6pfJCERhTaNA7C'\
        'a3fCTw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.31092436974789917,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,)],
                                 'selected-nodes': [(1,
        10)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4,
                          2],
        'notebook_display': 'normal',
        'notebook_percent': 0.565470417070805,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'score_threshold',
                                       'fReverse': False,
                                       'fSearchText': u'select_annotations',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(3,),
        (5,)],
                                      'selected-nodes': [(5,
        6)],
                                      'top-node': (3,
        1)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 439L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['i'\
        'mages.shape\n',
        'images[0]\n',
        'images[0].shape\n',
        'images[1].shape\n',
        'targets[0]\n',
        'targets[0].shape\n',
        'targets[0][0].shape\n',
        'targets[0][0]\n',
        "targets[0]['boxes']\n",
        "targets[0]['boxes'].shape\n",
        'annotations_per_crop = split_df.groupby("image_path").size()\n',
        'annotations_per_crop\n',
        'annotations\n',
        'annotations.image_path.shape\n',
        'selected_annotations = annotations[\n    (annotations.xmin > (windo'\
        'w_xmin - offset))\n    & (annotations.xmin < (window_xmax)) & (anno'\
        'tations.xmax >\n                                            (window'\
        '_xmin)) &\n    (annotations.ymin > (window_ymin - offset)) & (annot'\
        'ations.xmax <\n                                                   ('\
        'window_xmax + offset))\n    & (annotations.ymin <\n       (window_y'\
        'max)) & (annotations.ymax >\n                         (window_ymin)'\
        ') & (annotations.ymax <\n                                          '\
        ' (window_ymax + offset))].copy()\n\n',
        'window_xmin\n',
        'offset\n',
        'window_xmax\n',
        'selected_annotations\n',
        'selected_annotations.iloc[1]\n',
        're\n',
        'resolution = src.res\n',
        'df.minx\n',
        'left\n',
        'df.minx - left\n',
        '(df.minx - left)\n',
        'resolution\n']},
                       'launch-id': None,
                       'sel-line': 463L,
                       'sel-line-start': 20484L,
                       'selection_end': 20484L,
                       'selection_start': 20484L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['2 %*% 0\n',
        '2 $ 0\n',
        '2 % 0\n',
        '2 % 1\n',
        '2 % 4\n',
        '8 % 4\n']},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 162L,
                       'selection_end': 162L,
                       'selection_start': 162L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
        {'attrib-starts': [('Module|0|',
                            177),
                           ('Module|0|.__getattr__|0|',
                            764)],
         'code-line': "        raise ModuleAttributeError(\"'{}' object has "\
                      "no attribute '{}'\".format(\n",
         'first-line': 762L,
         'folded-linenos': [],
         'sel-line': 777L,
         'sel-line-start': 32045L,
         'selection_end': 32045L,
         'selection_start': 32045L,
         'zoom': 0L},
        1613859731.221511],
        [loc('deepforest/preprocess.py'),
         {'attrib-starts': [('preprocess_image|0|',
                             14)],
          'code-line': 'def preprocess_image(image):   \n',
          'first-line': 188L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 299L,
          'selection_end': 319L,
          'selection_start': 303L,
          'zoom': 0L},
         1613859731.224157],
        [loc('tests/test_preprocess.py'),
         {'attrib-starts': [('test_split_large_tile|0|',
                             134)],
          'code-line': 'def test_split_large_tile(tmpdir):\n',
          'first-line': 132L,
          'folded-linenos': [],
          'sel-line': 134L,
          'sel-line-start': 4691L,
          'selection_end': 4720L,
          'selection_start': 4720L,
          'zoom': 0L},
         1613859731.226704],
        [loc('deepforest/utilities.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             162)],
          'code-line': '    #Read shapefile\n',
          'first-line': 203L,
          'folded-linenos': [],
          'sel-line': 172L,
          'sel-line-start': 5520L,
          'selection_end': 5539L,
          'selection_start': 5539L,
          'zoom': 0L},
         1613859731.228995],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_predict_tile|0|',
                             77)],
          'code-line': '    #test raster prediction \n',
          'first-line': 63L,
          'folded-linenos': [],
          'sel-line': 78L,
          'sel-line-start': 2387L,
          'selection_end': 2415L,
          'selection_start': 2415L,
          'zoom': 0L},
         1613859731.23093],
        [loc('../DeepForest_Model/generate.py'),
         {'attrib-starts': [],
          'code-line': 'crops.generate_pretraining(BASE_PATH, DATA_PATH, BEN'\
                       'CHMARK_PATH, dask_client, allow_empty=False)\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 436L,
          'selection_end': 454L,
          'selection_start': 454L,
          'zoom': 0L},
         1613859731.233056],
        [loc('../DeepForest_Model/src/crops.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             16)],
          'code-line': 'def shapefile_to_annotations(shapefile, rgb, savedir'\
                       '="."):\n',
          'first-line': 47L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 326L,
          'selection_end': 2134L,
          'selection_start': 326L,
          'zoom': 0L},
         1613859731.235188],
        [loc('../DeepForest_Model/tests/test_generate.py'),
         {'attrib-starts': [('test_shapefile_to_annotations|0|',
                             6)],
          'code-line': '    df = crops.shapefile_to_annotations(shapefile="/'\
                       'Users/benweinstein/Downloads/temp_training/2019_OSBS'\
                       '_5_410000_3282000_image_crop.shp", rgb="/Users/benwe'\
                       'instein/Downloads/temp_training/2019_OSBS_5_410000_3'\
                       '282000_image_crop.tif")\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 7L,
          'sel-line-start': 142L,
          'selection_end': 1008L,
          'selection_start': 142L,
          'zoom': 0L},
         1613859731.237026],
        [loc('deepforest/preprocess.py'),
         {'attrib-starts': [('split_raster|0|',
                             142)],
          'code-line': '        crop_annotations = select_annotations(image_'\
                       'annotations, windows,\n',
          'first-line': 210L,
          'folded-linenos': [],
          'sel-line': 222L,
          'sel-line-start': 8586L,
          'selection_end': 8631L,
          'selection_start': 8613L,
          'zoom': 0L},
         1613859749.293787],
        [loc('deepforest/preprocess.py'),
         {'attrib-starts': [('split_raster|0|',
                             142)],
          'code-line': '        crop_annotations = select_annotations(image_'\
                       'annotations, windows,\n',
          'first-line': 212L,
          'folded-linenos': [],
          'sel-line': 222L,
          'sel-line-start': 8586L,
          'selection_end': 8631L,
          'selection_start': 8613L,
          'zoom': 0L},
         1613859750.433828],
        [loc('deepforest/preprocess.py'),
         {'attrib-starts': [('select_annotations|0|',
                             51)],
          'code-line': '        (annotations.ymin > (window_ymin - offset)) '\
                       '& (annotations.xmax <\n',
          'first-line': 72L,
          'folded-linenos': [],
          'sel-line': 79L,
          'sel-line-start': 2684L,
          'selection_end': 2706L,
          'selection_start': 2706L,
          'zoom': 0L},
         1613859854.459801],
        [loc('deepforest/utilities.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             162)],
          'code-line': '    #get coordinates\n',
          'first-line': 173L,
          'folded-linenos': [],
          'sel-line': 175L,
          'sel-line-start': 5580L,
          'selection_end': 5600L,
          'selection_start': 5600L,
          'zoom': 0L},
         1613860415.755619],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/computation/expressions.py'),
         {'attrib-starts': [('_evaluate_standard|0|',
                             61)],
          'code-line': '        return op(a, b)\n',
          'first-line': 52L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 1536L,
          'selection_end': 1536L,
          'selection_start': 1536L,
          'zoom': 0L},
         1613860423.729738],
        [loc('deepforest/utilities.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             162)],
          'code-line': '        resolution = src.res[0]\n',
          'first-line': 173L,
          'folded-linenos': [],
          'sel-line': 181L,
          'sel-line-start': 5736L,
          'selection_end': 5766L,
          'selection_start': 5766L,
          'zoom': 0L},
         1613860476.284303],
        [loc('tests/test_preprocess.py'),
         {'attrib-starts': [('test_split_large_tile|0|',
                             134)],
          'code-line': 'def test_split_large_tile(tmpdir):\n',
          'first-line': 132L,
          'folded-linenos': [],
          'sel-line': 134L,
          'sel-line-start': 4691L,
          'selection_end': 4720L,
          'selection_start': 4720L,
          'zoom': 0L},
         1613860476.299797],
        [loc('tests/test_preprocess.py'),
         {'attrib-starts': [('test_split_large_tile|0|',
                             134)],
          'code-line': '    assert crop_data.shape == (3, 400,400)\n',
          'first-line': 131L,
          'folded-linenos': [],
          'sel-line': 145L,
          'sel-line-start': 5520L,
          'selection_end': 5540L,
          'selection_start': 5531L,
          'zoom': 0L},
         1613860496.684534],
        [loc('tests/test_preprocess.py'),
         {'attrib-starts': [('test_split_large_tile|0|',
                             134)],
          'code-line': '    crop_data = b.read()\n',
          'first-line': 128L,
          'folded-linenos': [],
          'sel-line': 144L,
          'sel-line-start': 5495L,
          'selection_end': 5519L,
          'selection_start': 5495L,
          'zoom': 0L},
         1613860531.718968],
        [loc('../DeepForest_Model/src/crops.py'),
         {'attrib-starts': [('generate_training|0|',
                             117)],
          'code-line': '    shps_tifs = glob.glob(BASE_PATH + dirname + "*.t'\
                       'if")\n',
          'first-line': 150L,
          'folded-linenos': [],
          'sel-line': 146L,
          'sel-line-start': 6407L,
          'selection_end': 6456L,
          'selection_start': 6456L,
          'zoom': 0L},
         1613860577.073644],
        [loc('tests/test_preprocess.py'),
         {'attrib-starts': [('test_split_large_tile|0|',
                             134)],
          'code-line': '    crop_data = b.read()\n',
          'first-line': 128L,
          'folded-linenos': [],
          'sel-line': 144L,
          'sel-line-start': 5495L,
          'selection_end': 5519L,
          'selection_start': 5495L,
          'zoom': 0L},
         1613860577.085557],
        [loc('tests/test_preprocess.py'),
         {'attrib-starts': [('test_split_large_tile|0|',
                             134)],
          'code-line': '    crop_data = b.read()\n',
          'first-line': 76L,
          'folded-linenos': [],
          'sel-line': 144L,
          'sel-line-start': 5495L,
          'selection_end': 5519L,
          'selection_start': 5495L,
          'zoom': 0L},
         1613860615.259466]],
        20),
        'current-loc': loc('tests/test_preprocess.py'),
        'editor-state-list': [(loc('../DeepForest_Model/src/crops.py'),
                               {'attrib-starts': [('generate_training|0|',
        117)],
                                'code-line': '    shps_tifs = glob.glob(BASE'\
        '_PATH + dirname + "*.tif")\n',
                                'first-line': 150L,
                                'folded-linenos': [],
                                'sel-line': 146L,
                                'sel-line-start': 6407L,
                                'selection_end': 6456L,
                                'selection_start': 6456L,
                                'zoom': 0L}),
                              (loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/computation/expressions.py'),
                               {'attrib-starts': [('_evaluate_standard|0|',
        61)],
                                'code-line': '        return op(a, b)\n',
                                'first-line': 52L,
                                'folded-linenos': [],
                                'sel-line': 68L,
                                'sel-line-start': 1536L,
                                'selection_end': 1536L,
                                'selection_start': 1536L,
                                'zoom': 0L}),
                              (loc('deepforest/preprocess.py'),
                               {'attrib-starts': [('select_annotations|0|',
        51)],
                                'code-line': '        (annotations.ymin > (w'\
        'indow_ymin - offset)) & (annotations.xmax <\n',
                                'first-line': 72L,
                                'folded-linenos': [],
                                'sel-line': 79L,
                                'sel-line-start': 2684L,
                                'selection_end': 2706L,
                                'selection_start': 2706L,
                                'zoom': 0L}),
                              (loc('tests/test_preprocess.py'),
                               {'attrib-starts': [('test_split_large_tile|0|',
        134)],
                                'code-line': 'def test_split_large_tile(tmpd'\
        'ir):\n',
                                'first-line': 124L,
                                'folded-linenos': [],
                                'sel-line': 134L,
                                'sel-line-start': 4691L,
                                'selection_end': 4725L,
                                'selection_start': 4725L,
                                'zoom': 0L}),
                              (loc('deepforest/utilities.py'),
                               {'attrib-starts': [('shapefile_to_annotations'\
        '|0|',
        162)],
                                'code-line': '        resolution = src.res[0'\
        ']\n',
                                'first-line': 173L,
                                'folded-linenos': [],
                                'sel-line': 181L,
                                'sel-line-start': 5736L,
                                'selection_end': 5766L,
                                'selection_start': 5766L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../DeepForest_Model/src/crops.py'),
         loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/computation/expressions.py'),
         loc('deepforest/preprocess.py'),
         loc('tests/test_preprocess.py'),
         loc('deepforest/utilities.py')]),
                               'open_files': [u'deepforest/preprocess.py',
        u'deepforest/utilities.py',
        u'../DeepForest_Model/src/crops.py',
        u'tests/test_preprocess.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.4044943820224719},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           2),
                          1613860428.109482),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1607965912.374172),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1792,
                         1097)}]}
guimgr.recent-documents = [loc('tests/test_preprocess.py'),
                           loc('../DeepForest_Model/src/crops.py'),
                           loc('deepforest/utilities.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/computation/expressions.py'),
                           loc('deepforest/preprocess.py')]
guimgr.visual-state = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {'a'\
        'ttrib-starts': [('RunInSingleDir|0|',
                          456)],
        'code-line': '        import pytest\n',
        'first-line': 454L,
        'folded-linenos': [],
        'sel-line': 466L,
        'sel-line-start': 16384L,
        'selection_end': 16405L,
        'selection_start': 16384L,
        'zoom': 0L},
                       loc('.travis.yml'): {'attrib-starts': [],
        'code-line': 'env: TRAVIS=true\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 460L,
        'selection_end': 476L,
        'selection_start': 476L,
        'zoom': 0L},
                       loc('_config.yml'): {'attrib-starts': [],
        'code-line': 'theme: jekyll-theme-slate',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('azure-pipelines.yml'): {'attrib-starts': [],
        'code-line': '  - script: |\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 799L,
        'selection_end': 812L,
        'selection_start': 812L,
        'zoom': 0L},
                       loc('deepforest/IoU.py'): {'attrib-starts': [('_overl'\
        'ap_|0|',
        16)],
        'code-line': '    for index in truth_polys.index:\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 661L,
        'selection_end': 665L,
        'selection_start': 665L,
        'zoom': 0L},
                       loc('deepforest/callbacks.py'): {'attrib-starts': [],
        'code-line': 'import pandas as pd        \n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 239L,
        'selection_end': 258L,
        'selection_start': 258L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_528000_4978000_image_crop2.xml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    <filename>2019_YELL_2_528000_4978000_image_crop2.p'\
                     'ng</filename>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 39L,
        'selection_end': 95L,
        'selection_start': 95L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_541000_4977000_image_crop.tif'): {'a'\
        'ttrib-starts': [],
        'code-line': 'MM\0*\0\r',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_541000_4977000_image_crop.xml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    <filename>2019_YELL_2_541000_4977000_image_crop.pn'\
                     'g</filename>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 39L,
        'selection_end': 94L,
        'selection_start': 94L,
        'zoom': 0L},
                       loc('deepforest/data/deepforest_config.yml'): {'attri'\
        'b-starts': [],
        'code-line': '### \n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 1496L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/eval_example.csv'): {'attrib-sta'\
        'rts': [],
        'code-line': 'image_path,xmin,ymin,xmax,ymax,label\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/dataset.py'): {'attrib-starts': [],
        'code-line': 'During training, the model expects both the input tens'\
                     'ors, as well as a targets (list of dictionary), contai'\
                     'ning:\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 145L,
        'selection_end': 157L,
        'selection_start': 152L,
        'zoom': 0L},
                       loc('deepforest/deepforest.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/engine.py'): {'attrib-starts': [],
        'code-line': 'from coco_eval import CocoEvaluator\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 256L,
        'selection_end': 291L,
        'selection_start': 291L,
        'zoom': 0L},
                       loc('deepforest/evaluate.py'): {'attrib-starts': [('e'\
        'valuate|0|',
        52)],
        'code-line': '    Args:\n',
        'first-line': 58L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 2538L,
        'selection_end': 2547L,
        'selection_start': 2547L,
        'zoom': 0L},
                       loc('deepforest/model.py'): {'attrib-starts': [('crea'\
        'te_model|0|',
        13)],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 324L,
        'selection_end': 324L,
        'selection_start': 324L,
        'zoom': 0L},
                       loc('deepforest/predict.py'): {'attrib-starts': [('pr'\
        'edict_tile|0|',
        85)],
        'code-line': '                 use_soft_nms = False,\n',
        'first-line': 116L,
        'folded-linenos': [],
        'sel-line': 93L,
        'sel-line-start': 3326L,
        'selection_end': 3355L,
        'selection_start': 3355L,
        'zoom': 0L},
                       loc('deepforest/preprocess.py'): {'attrib-starts': [('p'\
        'reprocess_image|0|',
        14)],
        'code-line': 'def preprocess_image(image):   \n',
        'first-line': 188L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 299L,
        'selection_end': 319L,
        'selection_start': 303L,
        'zoom': 0L},
                       loc('deepforest/retinanet_train.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/train.py'): {'attrib-starts': [('trai'\
        'n|0|',
        2)],
        'code-line': '        config: a deepforest config object\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 226L,
        'selection_end': 268L,
        'selection_start': 268L,
        'zoom': 0L},
                       loc('deepforest/training.py'): {'attrib-starts': [('r'\
        'un|0|',
        52)],
        'code-line': '    \n',
        'first-line': 79L,
        'folded-linenos': [],
        'sel-line': 90L,
        'sel-line-start': 3553L,
        'selection_end': 3557L,
        'selection_start': 3557L,
        'zoom': 0L},
                       loc('deepforest/training_utils.py'): {'attrib-starts': [('M'\
        'etricLogger|0|',
        144),
        ('MetricLogger|0|.synchronize_between_processes|0|',
         172)],
        'code-line': '        for meter in self.meters.values():\n',
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 173L,
        'sel-line-start': 5085L,
        'selection_end': 5121L,
        'selection_start': 5121L,
        'zoom': 0L},
                       loc('deepforest/transforms.py'): {'attrib-starts': [('T'\
        'oTensor|0|',
        29),
        ('ToTensor|0|.__call__|0|',
         30)],
        'code-line': '        image = F.to_tensor(image).float()\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 904L,
        'selection_end': 945L,
        'selection_start': 945L,
        'zoom': 0L},
                       loc('deepforest/utilities.py'): {'attrib-starts': [('s'\
        'hapefile_to_annotations|0|',
        162)],
        'code-line': '    #Read shapefile\n',
        'first-line': 203L,
        'folded-linenos': [],
        'sel-line': 172L,
        'sel-line-start': 5520L,
        'selection_end': 5539L,
        'selection_start': 5539L,
        'zoom': 0L},
                       loc('deepforest/visualize.py'): {'attrib-starts': [],
        'code-line': '#Visualize module for plotting and handling prediction'\
                     's\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest_config.yml'): {'attrib-starts': [],
        'code-line': '    batch_size: 1\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 312L,
        'selection_end': 329L,
        'selection_start': 329L,
        'zoom': 0L},
                       loc('docs/conf.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('docs/training.md'): {'attrib-starts': [],
        'code-line': '# Training models\n',
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'code-line': '  - pytorch_lightning\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 235L,
        'selection_end': 256L,
        'selection_start': 256L,
        'zoom': 0L},
                       loc('evaluate.py'): {'attrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 12L,
        'selection_start': 12L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('deepforest|0|',
        7),
        ('deepforest|0|.__init__|0|',
         10)],
        'code-line': '        # if not use installed.\n',
        'first-line': 120L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 413L,
        'selection_end': 444L,
        'selection_start': 444L,
        'zoom': 0L},
                       loc('requirements.txt'): {'attrib-starts': [],
        'code-line': 'tqdm\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 225L,
        'selection_end': 229L,
        'selection_start': 229L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': '      install_requires=[\n',
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 1699L,
        'selection_end': 1723L,
        'selection_start': 1723L,
        'zoom': 0L},
                       loc('tests/test_data.py'): {'attrib-starts': [],
        'code-line': '# test data locations and existance\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dataset.py'): {'attrib-starts': [('te'\
        'st_TreeDataset_transform|0|',
        24)],
        'code-line': '                             transforms=dataset.get_tr'\
                     'ansform(train=train))\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 913L,
        'selection_end': 960L,
        'selection_start': 953L,
        'zoom': 0L},
                       loc('tests/test_deepforest.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_environment.py'): {'attrib-starts': [('t'\
        'est_environment|0|',
        3)],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 123L,
        'selection_end': 123L,
        'selection_start': 123L,
        'zoom': 0L},
                       loc('tests/test_keras_retinanet.py'): {'attrib-starts': [],
        'code-line': '# test loading of keras retinanet\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 33L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_main.py'): {'attrib-starts': [('test_'\
        'predict_tile|0|',
        77)],
        'code-line': '    #test raster prediction \n',
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 78L,
        'sel-line-start': 2387L,
        'selection_end': 2415L,
        'selection_start': 2415L,
        'zoom': 0L},
                       loc('tests/test_model.py'): {'attrib-starts': [('test'\
        '_load_backbone|0|',
        5)],
        'code-line': '',
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 230L,
        'selection_end': 230L,
        'selection_start': 230L,
        'zoom': 0L},
                       loc('tests/test_preprocess.py'): {'attrib-starts': [('t'\
        'est_split_large_tile|0|',
        134)],
        'code-line': 'def test_split_large_tile(tmpdir):\n',
        'first-line': 132L,
        'folded-linenos': [],
        'sel-line': 134L,
        'sel-line-start': 4691L,
        'selection_end': 4720L,
        'selection_start': 4720L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_utilities.py'): {'attrib-starts': [('t'\
        'est_xml_to_annotations|0|',
        18)],
        'code-line': '    #release_tag, weights = utilities.use_release()\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 678L,
        'selection_end': 729L,
        'selection_start': 729L,
        'zoom': 0L},
                       loc('tests/test_visualize.py'): {'attrib-starts': [('m'\
        '|0|',
        9)],
        'code-line': '    m.load_dataset(csv_file=csv_file, root_dir=os.path'\
                     '.dirname(csv_file), train=True)\n',
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 320L,
        'selection_end': 370L,
        'selection_start': 370L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'from deepforest.retinanet_train import main as retinan'\
                     'et_train\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 631L,
        'selection_end': 662L,
        'selection_start': 662L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_deepforest.py'): {'attr'\
        'ib-starts': [],
        'code-line': '#!/usr/bin/env python\n',
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest_Model/callbacks.py'): {'attrib-sta'\
        'rts': [('comet_callbacks|0|',
                 4),
                ('comet_callbacks|0|.on_epoch_end|0|',
                 19)],
        'code-line': '        \n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 803L,
        'selection_end': 811L,
        'selection_start': 811L,
        'zoom': 0L},
                       loc('../DeepForest_Model/pretraining.py'): {'attrib-s'\
        'tarts': [],
        'code-line': 'from callbacks import comet_callbacks\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 28L,
        'selection_end': 65L,
        'selection_start': 50L,
        'zoom': 0L},
                       loc('../DeepForest_Model/src/crops.py'): {'attrib-sta'\
        'rts': [('shapefile_to_annotations|0|',
                 16)],
        'code-line': 'def shapefile_to_annotations(shapefile, rgb, savedir="'\
                     '."):\n',
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 326L,
        'selection_end': 2134L,
        'selection_start': 326L,
        'zoom': 0L},
                       loc('../DeepForest_Model/tests/test_generate.py'): {'a'\
        'ttrib-starts': [('test_shapefile_to_annotations|0|',
                          6)],
        'code-line': '    df = crops.shapefile_to_annotations(shapefile="/Us'\
                     'ers/benweinstein/Downloads/temp_training/2019_OSBS_5_4'\
                     '10000_3282000_image_crop.shp", rgb="/Users/benweinstei'\
                     'n/Downloads/temp_training/2019_OSBS_5_410000_3282000_i'\
                     'mage_crop.tif")\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 142L,
        'selection_end': 1008L,
        'selection_start': 142L,
        'zoom': 0L},
                       loc('../DeepTreeAttention/tests/test_trees.py'): {'at'\
        'trib-starts': [],
        'code-line': "is_travis = 'TRAVIS' in os.environ\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 124L,
        'selection_end': 349L,
        'selection_start': 124L,
        'zoom': 0L},
                       loc('../NeonTreeEvaluation_python/src/get_data.py'): {'a'\
        'ttrib-starts': [('load_ground_truth|0|',
                          47)],
        'code-line': '    geo_ground_truth = utilities.project_boxes(ground_'\
                     'truth)\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1938L,
        'selection_end': 1998L,
        'selection_start': 1961L,
        'zoom': 0L},
                       loc('../deepforest-feedstock/conda-forge.yml'): {'att'\
        'rib-starts': [],
        'code-line': 'conda_forge_output_validation: true\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../deepforest-feedstock/recipe/meta.yaml'): {'at'\
        'trib-starts': [],
        'code-line': '    - tensorflow ==1.14.0\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 962L,
        'selection_end': 987L,
        'selection_start': 987L,
        'zoom': 0L},
                       loc('../vision/references/classification/train.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 39L,
        'selection_end': 49L,
        'selection_start': 49L,
        'zoom': 0L},
                       loc('../vision/references/classification/train_quantization.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import copy\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 38L,
        'selection_end': 38L,
        'selection_start': 38L,
        'zoom': 0L},
                       loc('../vision/references/classification/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 141L,
        'selection_end': 141L,
        'selection_start': 141L,
        'zoom': 0L},
                       loc('../vision/references/detection/coco_eval.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import json\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/detection/coco_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import copy\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/detection/engine.py'): {'at'\
        'trib-starts': [('_get_iou_types|0|',
                         57)],
        'code-line': '    if isinstance(model, torch.nn.parallel.Distributed'\
                     'DataParallel):\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1810L,
        'selection_end': 1844L,
        'selection_start': 1841L,
        'zoom': 0L},
                       loc('../vision/references/detection/group_by_aspect_ratio.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import bisect\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/detection/train.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import torchvision\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 952L,
        'selection_end': 952L,
        'selection_start': 952L,
        'zoom': 0L},
                       loc('../vision/references/detection/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 14L,
        'selection_end': 14L,
        'selection_start': 14L,
        'zoom': 0L},
                       loc('../vision/references/detection/utils.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import errno\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 133L,
        'selection_end': 145L,
        'selection_start': 145L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/coco_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from pycocotools import mask as coco_mask\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 102L,
        'selection_end': 115L,
        'selection_start': 115L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/train.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch.utils.data\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 52L,
        'selection_end': 61L,
        'selection_start': 61L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import random\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 41L,
        'selection_end': 46L,
        'selection_start': 46L,
        'zoom': 0L},
                       loc('../vision/references/segmentation/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import defaultdict, deque\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/similarity/loss.py'): {'att'\
        'rib-starts': [],
        'code-line': "'''\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 128L,
        'selection_end': 131L,
        'selection_start': 131L,
        'zoom': 0L},
                       loc('../vision/references/similarity/model.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import torch.nn as nn\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/similarity/sampler.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 108L,
        'selection_end': 108L,
        'selection_start': 108L,
        'zoom': 0L},
                       loc('../vision/references/similarity/test.py'): {'att'\
        'rib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 179L,
        'selection_end': 179L,
        'selection_start': 179L,
        'zoom': 0L},
                       loc('../vision/references/similarity/train.py'): {'at'\
        'trib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 184L,
        'selection_end': 184L,
        'selection_start': 184L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/scheduler.py'): {'a'\
        'ttrib-starts': [('WarmupMultiStepLR|0|',
                          4)],
        'code-line': 'class WarmupMultiStepLR(torch.optim.lr_scheduler._LRSc'\
                     'heduler):\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 47L,
        'selection_end': 88L,
        'selection_start': 88L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/train.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torch.utils.data.dataloader import default_collat'\
                     'e\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 75L,
        'selection_end': 91L,
        'selection_start': 91L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/references/video_classification/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import defaultdict, deque\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/caltech.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/celeba.py'): {'at'\
        'trib-starts': [],
        'code-line': 'from functools import partial\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/cifar.py'): {'att'\
        'rib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/cityscapes.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from typing import Any, Callable, Dict, List, Optional'\
                     ', Union, Tuple\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 57L,
        'selection_end': 57L,
        'selection_start': 57L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/coco.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'from .vision import VisionDataset\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/fakedata.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/flickr.py'): {'at'\
        'trib-starts': [],
        'code-line': 'from collections import defaultdict\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/folder.py'): {'at'\
        'trib-starts': [],
        'code-line': 'from .vision import VisionDataset\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/hmdb51.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import glob\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/imagenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import tempfile\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 78L,
        'selection_end': 93L,
        'selection_start': 93L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/kinetics.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from .utils import list_dir\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/lsun.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'import string\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 91L,
        'selection_end': 104L,
        'selection_start': 104L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/mnist.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 72L,
        'selection_end': 81L,
        'selection_start': 81L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/omniglot.py'): {'a'\
        'ttrib-starts': [('Omniglot|0|',
                          7)],
        'code-line': '            creates from the "evaluation" set. This te'\
                     'rminology is defined by the authors.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 537L,
        'selection_end': 601L,
        'selection_start': 601L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/phototour.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 115L,
        'selection_end': 127L,
        'selection_start': 127L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/places365.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/sbd.py'): {'attri'\
        'b-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/sbu.py'): {'attri'\
        'b-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/semeion.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/stl10.py'): {'att'\
        'rib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/svhn.py'): {'attr'\
        'ib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 215L,
        'selection_end': 215L,
        'selection_start': 215L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/ucf101.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/usps.py'): {'attr'\
        'ib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 175L,
        'selection_end': 175L,
        'selection_start': 175L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/utils.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import tarfile\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 52L,
        'selection_end': 52L,
        'selection_start': 52L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/video_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    _read_video_from_file,\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 168L,
        'selection_end': 194L,
        'selection_start': 194L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/vision.py'): {'at'\
        'trib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 112L,
        'selection_end': 112L,
        'selection_start': 112L,
        'zoom': 0L},
                       loc('../vision/torchvision/datasets/voc.py'): {'attri'\
        'b-starts': [],
        'code-line': 'from .utils import download_url, verify_str_arg\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 197L,
        'selection_end': 228L,
        'selection_start': 228L,
        'zoom': 0L},
                       loc('../vision/torchvision/io/image.py'): {'attrib-st'\
        'arts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 73L,
        'selection_end': 73L,
        'selection_start': 73L,
        'zoom': 0L},
                       loc('../vision/torchvision/io/video.py'): {'attrib-st'\
        'arts': [],
        'code-line': '        av = ImportError(\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 329L,
        'selection_end': 354L,
        'selection_start': 354L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/alexnet.py'): {'att'\
        'rib-starts': [],
        'code-line': 'model_urls = {\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 139L,
        'selection_end': 153L,
        'selection_start': 153L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/densenet.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import re\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/anchor_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# Copyright (c) Facebook, Inc. and its affiliates. All'\
                     ' Rights Reserved.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/backbone_utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/faster_rcnn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch.nn.functional as F\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 71L,
        'selection_end': 102L,
        'selection_start': 102L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/generalized_rcnn.py'): {'a'\
        'ttrib-starts': [('GeneralizedRCNN|0|',
                          12),
                         ('GeneralizedRCNN|0|.eager_outputs|0|',
                          35)],
        'code-line': '        # type: (Dict[str, Tensor], List[Dict[str, Ten'\
                     'sor]]) -> Union[Dict[str, Tensor], List[Dict[str, Tens'\
                     'or]]]\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1056L,
        'selection_end': 1113L,
        'selection_start': 1107L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/image_list.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# Copyright (c) Facebook, Inc. and its affiliates. All'\
                     ' Rights Reserved.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/keypoint_rcnn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torchvision.ops import MultiScaleRoIAlign\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 35L,
        'selection_end': 81L,
        'selection_start': 81L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/mask_rcnn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '__all__ = [\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 307L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/retinanet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from typing import Dict, List, Tuple, Optional\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 107L,
        'selection_end': 153L,
        'selection_start': 145L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/roi_heads.py'): {'a'\
        'ttrib-starts': [('RoIHeads|0|',
                          484),
                         ('RoIHeads|0|.check_targets|0|',
                          619)],
        'code-line': '        # type: (Optional[List[Dict[str, Tensor]]]) ->'\
                     ' None\n',
        'first-line': 607L,
        'folded-linenos': [],
        'sel-line': 620L,
        'sel-line-start': 22884L,
        'selection_end': 22909L,
        'selection_start': 22901L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/rpn.py'): {'a'\
        'ttrib-starts': [('RegionProposalNetwork|0|',
                          103),
                         ('RegionProposalNetwork|0|.pre_nms_top_n|0|',
                          167)],
        'code-line': '    def pre_nms_top_n(self):\n',
        'first-line': 157L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 6362L,
        'selection_end': 6379L,
        'selection_start': 6379L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/detection/transform.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 157L,
        'selection_end': 157L,
        'selection_start': 157L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/googlenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/inception.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import namedtuple\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/mnasnet.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/mobilenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 90L,
        'selection_end': 90L,
        'selection_start': 90L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/mobilenetv2.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torch import nn\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/resnet.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/segmentation/deeplabv3.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/segmentation/fcn.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from torch import nn\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/segmentation/segmentation.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 279L,
        'selection_end': 279L,
        'selection_start': 279L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/shufflenetv2.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/squeezenet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/utils.py'): {'attri'\
        'b-starts': [],
        'code-line': 'try:\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/vgg.py'): {'attrib-'\
        'starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/models/video/resnet.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from ..utils import load_state_dict_from_url\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 23L,
        'selection_end': 69L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/_box_convert.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/_register_onnx_ops.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import sys\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/_utils.py'): {'attrib-'\
        'starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/boxes.py'): {'attrib-s'\
        'tarts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/deform_conv.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import math\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/feature_pyramid_network.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import OrderedDict\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/focal_loss.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/misc.py'): {'attrib-st'\
        'arts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 328L,
        'selection_end': 328L,
        'selection_start': 328L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/poolers.py'): {'attrib'\
        '-starts': [],
        'code-line': '# Copyright (c) Facebook, Inc. and its affiliates. All'\
                     ' Rights Reserved.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/ps_roi_align.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/ps_roi_pool.py'): {'at'\
        'trib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/roi_align.py'): {'attr'\
        'ib-starts': [('roi_align|0|',
                       10)],
        'code-line': 'def roi_align(\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 260L,
        'selection_end': 274L,
        'selection_start': 274L,
        'zoom': 0L},
                       loc('../vision/torchvision/ops/roi_pool.py'): {'attri'\
        'b-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/autoaugment.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import math\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/functional.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import math\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/functional_pil.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import numbers\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/functional_tensor.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../vision/torchvision/transforms/transforms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from .functional import InterpolationMode, _interpolat'\
                     'ion_modes_from_int\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 271L,
        'selection_end': 312L,
        'selection_start': 295L,
        'zoom': 0L},
                       loc('../../Downloads/tv-training-code.py'): {'attrib-'\
        'starts': [],
        'code-line': 'from engine import train_one_epoch, evaluate\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 372L,
        'selection_end': 383L,
        'selection_start': 377L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/outcomes.py'): {'a'\
        'ttrib-starts': [('fail|0|',
                          142)],
        'code-line': '    raise Failed(msg=msg, pytrace=pytrace)\n',
        'first-line': 142L,
        'folded-linenos': [],
        'sel-line': 152L,
        'sel-line-start': 4855L,
        'selection_end': 4855L,
        'selection_start': 4855L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          495),
                         ('Module|0|._importtestmodule|0|',
                          573)],
        'code-line': '            raise self.CollectError(\n',
        'first-line': 594L,
        'folded-linenos': [],
        'sel-line': 602L,
        'sel-line-start': 22763L,
        'selection_end': 22799L,
        'selection_start': 22763L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/indexes/range.py'): {'a'\
        'ttrib-starts': [('RangeIndex|0|',
                          37),
                         ('RangeIndex|0|.get_loc|0|',
                          345)],
        'code-line': '                    raise KeyError(key) from err\n',
        'first-line': 337L,
        'folded-linenos': [],
        'sel-line': 352L,
        'sel-line-start': 9857L,
        'selection_end': 9857L,
        'selection_start': 9857L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_LocationIndexer|0|',
                          596),
                         ('_LocationIndexer|0|.__getitem__|0|',
                          880)],
        'code-line': '            return self._getitem_tuple(key)\n',
        'first-line': 882L,
        'folded-linenos': [],
        'sel-line': 887L,
        'sel-line-start': 27993L,
        'selection_end': 27993L,
        'selection_start': 27993L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/reshape/concat.py'): {'a'\
        'ttrib-starts': [('_Concatenator|0|',
                          300),
                         ('_Concatenator|0|.__init__|0|',
                          305)],
        'code-line': '        if isinstance(objs, (ABCSeries, ABCDataFrame, '\
                     'str)):\n',
        'first-line': 294L,
        'folded-linenos': [],
        'sel-line': 318L,
        'sel-line-start': 9054L,
        'selection_end': 9114L,
        'selection_start': 9114L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/io/common.py'): {'a'\
        'ttrib-starts': [('_is_binary_mode|0|',
                          823)],
        'code-line': '    return isinstance(handle, tuple(binary_classes)) o'\
                     'r "b" in getattr(\n',
        'first-line': 811L,
        'folded-linenos': [],
        'sel-line': 828L,
        'sel-line-start': 26969L,
        'selection_end': 26969L,
        'selection_start': 26969L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py'): {'a'\
        'ttrib-starts': [('TrainLoop|0|',
                          37),
                         ('TrainLoop|0|.run_training_batch|0|',
                          641),
                         ('TrainLoop|0|.run_training_batch|0|.train_step_and'\
                          '_backward_closure|0|',
                          706)],
        'code-line': '                            result = self.training_ste'\
                     'p_and_backward(\n',
        'first-line': 692L,
        'folded-linenos': [],
        'sel-line': 707L,
        'sel-line-start': 29056L,
        'selection_end': 29056L,
        'selection_start': 29056L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/tifffile/tifffile.py'): {'a'\
        'ttrib-starts': [('TiffPage|0|',
                          5228),
                         ('TiffPage|0|.decode|0|',
                          5577),
                         ('TiffPage|0|.decode|0|.decode|1|',
                          5925)],
        'code-line': "                raise ValueError(f'TiffPage {self.inde"\
                     "x}: {exc}')\r\n",
        'first-line': 5612L,
        'folded-linenos': [],
        'sel-line': 5633L,
        'sel-line-start': 217235L,
        'selection_end': 217235L,
        'selection_start': 217235L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/conv.py'): {'a'\
        'ttrib-starts': [('Conv2d|0|',
                          261),
                         ('Conv2d|0|._conv_forward|0|',
                          413)],
        'code-line': '        return F.conv2d(input, weight, self.bias, self'\
                     '.stride,\n',
        'first-line': 395L,
        'folded-linenos': [],
        'sel-line': 418L,
        'sel-line-start': 18107L,
        'selection_end': 18107L,
        'selection_start': 18107L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/optim/sgd.py'): {'a'\
        'ttrib-starts': [('SGD|0|',
                          4),
                         ('SGD|0|.step|0|',
                          75)],
        'code-line': '                loss = closure()\n',
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 85L,
        'sel-line-start': 3243L,
        'selection_end': 3243L,
        'selection_start': 3243L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py'): {'a'\
        'ttrib-starts': [('default_collate|0|',
                          41)],
        'code-line': '        return {key: default_collate([d[key] for d in '\
                     'batch]) for key in elem}\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 72L,
        'sel-line-start': 2926L,
        'selection_end': 2926L,
        'selection_start': 2926L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py'): {'a'\
        'ttrib-starts': [('_BaseDatasetFetcher|0|',
                          6),
                         ('_BaseDatasetFetcher|0|.fetch|0|',
                          13)],
        'code-line': '        raise NotImplementedError()\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 511L,
        'selection_end': 546L,
        'selection_start': 546L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchsummary/torchsummary.py'): {'a'\
        'ttrib-starts': [('summary|0|',
                          8),
                         ('summary|0|.register_hook|0|',
                          10),
                         ('summary|0|.register_hook|0|.hook|0|',
                          12)],
        'code-line': '            summary[m_key]["input_shape"] = list(input'\
                     '[0].size())\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 482L,
        'selection_end': 482L,
        'selection_start': 482L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'): {'a'\
        'ttrib-starts': [('RetinaNet|0|',
                          243),
                         ('RetinaNet|0|.forward|0|',
                          483)],
        'code-line': '                boxes = target["boxes"]\n',
        'first-line': 498L,
        'folded-linenos': [],
        'sel-line': 503L,
        'sel-line-start': 21936L,
        'selection_end': 21936L,
        'selection_start': 21936L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/transform.py'): {'a'\
        'ttrib-starts': [('GeneralizedRCNNTransform|0|',
                          57),
                         ('GeneralizedRCNNTransform|0|.normalize|0|',
                          119)],
        'code-line': '    def normalize(self, image):\n',
        'first-line': 108L,
        'folded-linenos': [],
        'sel-line': 119L,
        'sel-line-start': 4685L,
        'selection_end': 4716L,
        'selection_start': 4716L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/transforms/transforms.py'): {'a'\
        'ttrib-starts': [('Resize|0|',
                          231),
                         ('Resize|0|.__init__|0|',
                          249)],
        'code-line': '            raise ValueError("If size is a sequence, i'\
                     't should have 1 or 2 values")\n',
        'first-line': 233L,
        'folded-linenos': [],
        'sel-line': 254L,
        'sel-line-start': 9069L,
        'selection_end': 9152L,
        'selection_start': 9069L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.initial-dir = {None: ('custom',
                           u'/Users/benweinstein/Documents/DeepForest-pytorch')}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/bin/python3')}
proj.pypath = {None: ('custom',
                      [])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'select_annotations',
                         u'epochs',
                         u'collate',
                         u'forward',
                         u'debug',
                         u'print_',
                         u'soft_nms',
                         u'self',
                         u'probability_threshold',
                         u'read_config',
                         u'load_dataset',
                         u'plt',
                         u'name',
                         u'show',
                         u'gpd',
                         u'os',
                         u'callback',
                         u'callbacks',
                         u'train',
                         u'train=']
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_dataset.py',
                            [('test_TreeDataset_transform[True]',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              23),
                             ('test_TreeDataset_transform[False]',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              23),
                             ('test_TreeDataset',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_data.py',
                            [('test_get_data',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_utilities.py',
                            [('test_float_warning',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              33),
                             ('test_xml_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              18)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_model.py',
                            [('test_load_backbone',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              5)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_preprocess.py',
                            [('test_compute_windows',
                              0,
                              None,
                              None,
                              None,
                              1613859645,
                              39),
                             ('test_split_size_error',
                              0,
                              None,
                              None,
                              None,
                              1613859645,
                              127),
                             ('test_select_annotations',
                              0,
                              None,
                              None,
                              None,
                              1613859645,
                              45),
                             ('test_split_raster_empty',
                              0,
                              None,
                              None,
                              None,
                              1613859645,
                              87),
                             ('test_split_raster',
                              0,
                              None,
                              None,
                              None,
                              1613859645,
                              76),
                             ('test_select_annotations_tile',
                              0,
                              None,
                              None,
                              None,
                              1613859645,
                              60),
                             ('test_split_large_tile',
                              0,
                              None,
                              None,
                              None,
                              1613860604,
                              134)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                            [('test_train',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              35),
                             ('test_predict_image_fromarray',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              55),
                             ('test_main',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              32),
                             ('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              77),
                             ('test_predict_image_empty',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              42),
                             ('test_predict_image_fromfile',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              48),
                             ('test_predict_file',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              69),
                             ('test_predict_return_plot',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              63),
                             ('test_precision_recall_callbacks',
                              0,
                              None,
                              None,
                              None,
                              1613787942,
                              139),
                             ('test_train_callbacks',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              118),
                             ('test_evaluate',
                              0,
                              None,
                              None,
                              None,
                              1613787736,
                              113)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_environment.py',
                            [('test_environment',
                              0,
                              None,
                              None,
                              None,
                              1613602013,
                              3)])],
                          {u'/Users/benweinstein/Documents/DeepForest/tests/test_deepforest.py': (u'Test process aborted: some tests were not run',
        1607966490)})

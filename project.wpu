#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('tests/test_evaluate.py'): {41L: (0,
        None,
        1,
        0)},
                     loc('tests/test_utilities.py'): {48L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {}}
debug.exceptions-ignored = {loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1514: True},
                            loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/config/__init__.py'): {1514: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BeCfPquEZeqQ6pfJCERhTaNA7C'\
        'a3fCTw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.18095238095238098,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(2,)],
                                 'selected-nodes': [(2,
        15)],
                                 'top-node': (2,
        0)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4,
                          5],
        'notebook_display': 'normal',
        'notebook_percent': 0.40169133192389006,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'train',
                                       'fReverse': False,
                                       'fSearchText': u'load_state_',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': "{'ID': 'cjzd8q4fg5udq0848o53i1hk7', 'Da"\
                                    "taRow ID': 'cjzcz3myij6000cwb07fx5kyb',"\
                                    " 'Labeled Data': 'https://storage.label"\
                                    "box.com/cjxw1pgi22v080794sa41l63t%2Fda2"\
                                    "d5a44-ec1d-9e05-cf1e-b9906bc74a76-BDA_1"\
                                    "2C_20181127_1.JPG?Expires=1625706572078"\
                                    "&KeyName=labelbox-assets-key-3&Signatur"\
                                    "e=j9tlyVHFQlSuhFEyt-pnsBXBfew', 'Label'"\
                                    ": {'Canadian Goose': [{'geometry': [{'x"\
                                    "': 4463, 'y': 2707}, {'x': 4553, 'y': 2"\
                                    "766}, {'x': 4519, 'y': 2810}, {'x': 442"\
                                    "8, 'y': 2744}]}, {'geometry': [{'x': 43"\
                                    "11, 'y': 2748}, {'x': 4399, 'y': 2731},"\
                                    " {'x': 4413, 'y': 2786}, {'x': 4308, 'y"\
                                    "': 2798}]}, {'geometry': [{'x': 3707, '"\
                                    "y': 1827}, {'x': 3762, 'y': 1862}, {'x'"\
                                    ": 3817, 'y': 1794}, {'x': 3773, 'y': 17"\
                                    "61}]}, {'geometry': [{'x': 3634, 'y': 1"\
                                    "882}, {'x': 3717, 'y': 1889}, {'x': 371"\
                                    "8, 'y': 1920}, {'x': 3628, 'y': 1915}]}"\
                                    ", {'geometry': [{'x': 3669, 'y': 1931},"\
                                    " {'x': 3702, 'y': 1927}, {'x': 3738, 'y"\
                                    "': 1997}, {'x': 3696, 'y': 2009}]}, {'g"\
                                    "eometry': [{'x': 3608, 'y': 1914}, {'x'"\
                                    ": 3655, 'y': 1929}, {'x': 3642, 'y': 19"\
                                    "94}, {'x': 3595, 'y': 1982}]}, {'geomet"\
                                    "ry': [{'x': 3839, 'y': 2136}, {'x': 381"\
                                    "1, 'y': 2177}, {'x': 3729, 'y': 2115}, "\
                                    "{'x': 3769, 'y': 2083}]}, {'geometry': "\
                                    "[{'x': 3915, 'y': 2244}, {'x': 3996, 'y"\
                                    "': 2292}, {'x': 4028, 'y': 2247}, {'x':"\
                                    " 3948, 'y': 2190}]}, {'geometry': [{'x'"\
                                    ": 3866, 'y': 2428}, {'x': 3900, 'y': 23"\
                                    "97}, {'x': 3941, 'y': 2422}, {'x': 3889"\
                                    ", 'y': 2494}, {'x': 3844, 'y': 2472}]},"\
                                    " {'geometry': [{'x': 3762, 'y': 2388}, "\
                                    "{'x': 3868, 'y': 2355}, {'x': 3853, 'y'"\
                                    ": 2305}, {'x': 3753, 'y': 2331}]}, {'ge"\
                                    "ometry': [{'x': 3935, 'y': 2398}, {'x':"\
                                    " 3966, 'y': 2364}, {'x': 3896, 'y': 230"\
                                    "0}, {'x': 3868, 'y': 2321}]}, {'geometr"\
                                    "y': [{'x': 3744, 'y': 2606}, {'x': 3816"\
                                    ", 'y': 2588}, {'x': 3833, 'y': 2635}, {"\
                                    "'x': 3749, 'y': 2657}]}, {'geometry': ["\
                                    "{'x': 3956, 'y': 2691}, {'x': 3998, 'y'"\
                                    ": 2696}, {'x': 3988, 'y': 2790}, {'x': "\
                                    "3946, 'y': 2785}]}, {'geometry': [{'x':"\
                                    " 4019, 'y': 2780}, {'x': 4090, 'y': 282"\
                                    "6}, {'x': 4066, 'y': 2865}, {'x': 3994,"\
                                    " 'y': 2816}]}, {'geometry': [{'x': 3107"\
                                    ", 'y': 2235}, {'x': 3191, 'y': 2291}, {"\
                                    "'x': 3218, 'y': 2247}, {'x': 3120, 'y':"\
                                    " 2203}]}, {'geometry': [{'x': 3162, 'y'"\
                                    ": 2353}, {'x': 3212, 'y': 2367}, {'x': "\
                                    "3186, 'y': 2459}, {'x': 3141, 'y': 2448"\
                                    "}]}, {'geometry': [{'x': 3351, 'y': 227"\
                                    "6}, {'x': 3373, 'y': 2321}, {'x': 3473,"\
                                    " 'y': 2269}, {'x': 3442, 'y': 2232}]}, "\
                                    "{'geometry': [{'x': 3208, 'y': 2440}, {"\
                                    "'x': 3220, 'y': 2470}, {'x': 3292, 'y':"\
                                    " 2449}, {'x': 3275, 'y': 2403}]}, {'geo"\
                                    "metry': [{'x': 3435, 'y': 2499}, {'x': "\
                                    "3432, 'y': 2528}, {'x': 3509, 'y': 2545"\
                                    "}, {'x': 3522, 'y': 2502}]}, {'geometry"\
                                    "': [{'x': 4212, 'y': 3222}, {'x': 4276,"\
                                    " 'y': 3224}, {'x': 4270, 'y': 3323}, {'"\
                                    "x': 4213, 'y': 3325}]}, {'geometry': [{"\
                                    "'x': 4181, 'y': 3458}, {'x': 4241, 'y':"\
                                    " 3464}, {'x': 4233, 'y': 3558}, {'x': 4"\
                                    "174, 'y': 3554}]}, {'geometry': [{'x': "\
                                    "4344, 'y': 3418}, {'x': 4348, 'y': 3497"\
                                    "}, {'x': 4442, 'y': 3492}, {'x': 4408, "\
                                    "'y': 3403}]}, {'geometry': [{'x': 4507,"\
                                    " 'y': 3443}, {'x': 4568, 'y': 3500}, {'"\
                                    "x': 4614, 'y': 3464}, {'x': 4551, 'y': "\
                                    "3407}]}, {'geometry': [{'x': 4664, 'y':"\
                                    " 3388}, {'x': 4756, 'y': 3463}, {'x': 4"\
                                    "768, 'y': 3420}, {'x': 4717, 'y': 3356}"\
                                    "]}, {'geometry': [{'x': 4776, 'y': 3427"\
                                    "}, {'x': 4829, 'y': 3430}, {'x': 4841, "\
                                    "'y': 3339}, {'x': 4795, 'y': 3343}]}, {"\
                                    "'geometry': [{'x': 4928, 'y': 3411}, {'"\
                                    "x': 4948, 'y': 3459}, {'x': 5042, 'y': "\
                                    "3418}, {'x': 5020, 'y': 3379}]}, {'geom"\
                                    "etry': [{'x': 4468, 'y': 3281}, {'x': 4"\
                                    "504, 'y': 3306}, {'x': 4556, 'y': 3230}"\
                                    ", {'x': 4527, 'y': 3217}]}, {'geometry'"\
                                    ": [{'x': 4713, 'y': 3605}, {'x': 4769, "\
                                    "'y': 3613}, {'x': 4771, 'y': 3647}, {'x"\
                                    "': 4721, 'y': 3648}]}, {'geometry': [{'"\
                                    "x': 4918, 'y': 3241}, {'x': 4996, 'y': "\
                                    "3178}, {'x': 4962, 'y': 3146}, {'x': 48"\
                                    "98, 'y': 3186}]}, {'geometry': [{'x': 4"\
                                    "207, 'y': 2987}, {'x': 4241, 'y': 3015}"\
                                    ", {'x': 4315, 'y': 2939}, {'x': 4280, '"\
                                    "y': 2921}]}, {'geometry': [{'x': 4064, "\
                                    "'y': 2989}, {'x': 4137, 'y': 2965}, {'x"\
                                    "': 4161, 'y': 3075}, {'x': 4089, 'y': 3"\
                                    "090}]}, {'geometry': [{'x': 4137, 'y': "\
                                    "2786}, {'x': 4135, 'y': 2835}, {'x': 42"\
                                    "28, 'y': 2843}, {'x': 4223, 'y': 2790}]"\
                                    "}, {'geometry': [{'x': 3884, 'y': 2866}"\
                                    ", {'x': 3921, 'y': 2921}, {'x': 3842, '"\
                                    "y': 2965}, {'x': 3826, 'y': 2921}]}, {'"\
                                    "geometry': [{'x': 4136, 'y': 2449}, {'x"\
                                    "': 4178, 'y': 2518}, {'x': 4244, 'y': 2"\
                                    "494}, {'x': 4197, 'y': 2420}]}, {'geome"\
                                    "try': [{'x': 4333, 'y': 2318}, {'x': 43"\
                                    "61, 'y': 2368}, {'x': 4456, 'y': 2318},"\
                                    " {'x': 4426, 'y': 2291}]}, {'geometry':"\
                                    " [{'x': 3518, 'y': 2993}, {'x': 3553, '"\
                                    "y': 3007}, {'x': 3591, 'y': 2932}, {'x'"\
                                    ": 3538, 'y': 2927}]}, {'geometry': [{'x"\
                                    "': 3603, 'y': 2932}, {'x': 3610, 'y': 2"\
                                    "968}, {'x': 3674, 'y': 2962}, {'x': 366"\
                                    "5, 'y': 2914}]}, {'geometry': [{'x': 34"\
                                    "94, 'y': 3141}, {'x': 3567, 'y': 3075},"\
                                    " {'x': 3530, 'y': 3048}, {'x': 3471, 'y"\
                                    "': 3108}]}, {'geometry': [{'x': 3725, '"\
                                    "y': 3084}, {'x': 3696, 'y': 3162}, {'x'"\
                                    ": 3760, 'y': 3176}, {'x': 3773, 'y': 30"\
                                    "90}]}, {'geometry': [{'x': 3678, 'y': 3"\
                                    "005}, {'x': 3722, 'y': 3035}, {'x': 368"\
                                    "0, 'y': 3095}, {'x': 3638, 'y': 3061}]}"\
                                    ", {'geometry': [{'x': 4093, 'y': 3311},"\
                                    " {'x': 4115, 'y': 3382}, {'x': 4066, 'y"\
                                    "': 3391}, {'x': 4062, 'y': 3314}]}, {'g"\
                                    "eometry': [{'x': 5330, 'y': 2614}, {'x'"\
                                    ": 5374, 'y': 2616}, {'x': 5350, 'y': 27"\
                                    "25}, {'x': 5303, 'y': 2716}]}, {'geomet"\
                                    "ry': [{'x': 5397, 'y': 2567}, {'x': 544"\
                                    "2, 'y': 2567}, {'x': 5445, 'y': 2655}, "\
                                    "{'x': 5392, 'y': 2649}]}], 'Sandhill Cr"\
                                    "ane': [{'geometry': [{'x': 3288, 'y': 2"\
                                    "23}, {'x': 3363, 'y': 229}, {'x': 3342,"\
                                    " 'y': 353}, {'x': 3281, 'y': 343}]}, {'"\
                                    "geometry': [{'x': 4406, 'y': 1744}, {'x"\
                                    "': 4523, 'y': 1803}, {'x': 4497, 'y': 1"\
                                    "881}, {'x': 4328, 'y': 1783}]}, {'geome"\
                                    "try': [{'x': 4633, 'y': 1610}, {'x': 47"\
                                    "22, 'y': 1662}, {'x': 4696, 'y': 1717},"\
                                    " {'x': 4597, 'y': 1671}, {'x': 4627, 'y"\
                                    "': 1619}]}, {'geometry': [{'x': 4802, '"\
                                    "y': 1666}, {'x': 4898, 'y': 1681}, {'x'"\
                                    ": 4909, 'y': 1720}, {'x': 4776, 'y': 17"\
                                    "20}]}, {'geometry': [{'x': 5088, 'y': 1"\
                                    "612}, {'x': 5181, 'y': 1604}, {'x': 519"\
                                    "4, 'y': 1692}, {'x': 5086, 'y': 1682}]}"\
                                    ", {'geometry': [{'x': 4654, 'y': 2522},"\
                                    " {'x': 4709, 'y': 2551}, {'x': 4658, 'y"\
                                    "': 2651}, {'x': 4597, 'y': 2622}]}, {'g"\
                                    "eometry': [{'x': 4838, 'y': 2708}, {'x'"\
                                    ": 4896, 'y': 2732}, {'x': 4862, 'y': 28"\
                                    "48}, {'x': 4799, 'y': 2821}]}, {'geomet"\
                                    "ry': [{'x': 2848, 'y': 3602}, {'x': 294"\
                                    "5, 'y': 3624}, {'x': 2938, 'y': 3648}, "\
                                    "{'x': 2858, 'y': 3647}, {'x': 2785, 'y'"\
                                    ": 3641}]}, {'geometry': [{'x': 2998, 'y"\
                                    "': 3620}, {'x': 3036, 'y': 3619}, {'x':"\
                                    " 3037, 'y': 3648}, {'x': 2989, 'y': 364"\
                                    "7}]}], 'Mallard': [{'geometry': [{'x': "\
                                    "3044, 'y': 2737}, {'x': 3065, 'y': 2766"\
                                    "}, {'x': 3024, 'y': 2789}, {'x': 3001, "\
                                    "'y': 2773}]}, {'geometry': [{'x': 2820,"\
                                    " 'y': 2939}, {'x': 2845, 'y': 2938}, {'"\
                                    "x': 2860, 'y': 2988}, {'x': 2830, 'y': "\
                                    "2993}]}, {'geometry': [{'x': 2616, 'y':"\
                                    " 3337}, {'x': 2643, 'y': 3350}, {'x': 2"\
                                    "607, 'y': 3396}, {'x': 2581, 'y': 3375}"\
                                    "]}, {'geometry': [{'x': 2623, 'y': 3326"\
                                    "}, {'x': 2646, 'y': 3339}, {'x': 2668, "\
                                    "'y': 3294}, {'x': 2642, 'y': 3280}]}, {"\
                                    "'geometry': [{'x': 2466, 'y': 3581}, {'"\
                                    "x': 2494, 'y': 3588}, {'x': 2476, 'y': "\
                                    "3640}, {'x': 2450, 'y': 3638}]}, {'geom"\
                                    "etry': [{'x': 2779, 'y': 3363}, {'x': 2"\
                                    "827, 'y': 3362}, {'x': 2826, 'y': 3335}"\
                                    ", {'x': 2776, 'y': 3337}]}, {'geometry'"\
                                    ": [{'x': 2920, 'y': 3184}, {'x': 2928, "\
                                    "'y': 3231}, {'x': 2963, 'y': 3226}, {'x"\
                                    "': 2946, 'y': 3169}]}, {'geometry': [{'"\
                                    "x': 2828, 'y': 3147}, {'x': 2849, 'y': "\
                                    "3176}, {'x': 2888, 'y': 3130}, {'x': 28"\
                                    "65, 'y': 3110}]}], 'Northern Pintail': "\
                                    "[{'geometry': [{'x': 3140, 'y': 2749}, "\
                                    "{'x': 3157, 'y': 2769}, {'x': 3113, 'y'"\
                                    ": 2796}, {'x': 3098, 'y': 2771}]}, {'ge"\
                                    "ometry': [{'x': 3462, 'y': 2758}, {'x':"\
                                    " 3492, 'y': 2791}, {'x': 3522, 'y': 276"\
                                    "6}, {'x': 3477, 'y': 2735}]}, {'geometr"\
                                    "y': [{'x': 2519, 'y': 3447}, {'x': 2550"\
                                    ", 'y': 3454}, {'x': 2532, 'y': 3500}, {"\
                                    "'x': 2501, 'y': 3489}]}, {'geometry': ["\
                                    "{'x': 2844, 'y': 3023}, {'x': 2889, 'y'"\
                                    ": 3049}, {'x': 2905, 'y': 3024}, {'x': "\
                                    "2852, 'y': 2999}]}, {'geometry': [{'x':"\
                                    " 2942, 'y': 2960}, {'x': 2968, 'y': 298"\
                                    "2}, {'x': 3014, 'y': 2928}, {'x': 2979,"\
                                    " 'y': 2914}]}, {'geometry': [{'x': 3188"\
                                    ", 'y': 3486}, {'x': 3201, 'y': 3540}, {"\
                                    "'x': 3232, 'y': 3535}, {'x': 3215, 'y':"\
                                    " 3478}]}], 'Northern Shoveler': [{'geom"\
                                    "etry': [{'x': 3549, 'y': 3147}, {'x': 3"\
                                    "564, 'y': 3165}, {'x': 3604, 'y': 3111}"\
                                    ", {'x': 3579, 'y': 3101}]}, {'geometry'"\
                                    ": [{'x': 3375, 'y': 2900}, {'x': 3397, "\
                                    "'y': 2927}, {'x': 3445, 'y': 2877}, {'x"\
                                    "': 3418, 'y': 2863}]}]}, 'Created By': "\
                                    "'steven_sesnie@fws.gov', 'Project Name'"\
                                    ": 'USFWS Benchmark', 'Created At': '201"\
                                    "9-08-15T22:13:36.000Z', 'Updated At': '"\
                                    "2019-09-17T16:40:46.000Z', 'Seconds to "\
                                    "Label': 51.623, 'External ID': 'BDA_12C"\
                                    "_20181127_1.JPG', 'Agreement': 0.508, '"\
                                    "Benchmark Agreement': -1, 'Benchmark ID"\
                                    "': None, 'Dataset Name': 'USFWS Benchma"\
                                    "rk', 'Reviews': [], 'View Label': 'http"\
                                    "s://image-segmentation-v4.labelbox.com?"\
                                    "project=cjzcz0zq9toh60721go1l3a4y&label"\
                                    "=cjzd8q4fg5udq0848o53i1hk7', 'Has Open "\
                                    "Issues': 0, 'Skipped': 0}\n",
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/benweinstein/Documents/BirdDetector/utils/format_newmexico.py': [';'\
        'en(species_dict[x])\n',
        'len(species_dict[x])\n',
        'len(species_dict[x][0])\n',
        'species_dict[x][0]\n',
        'species_dict[x][0]["geometry"]\n',
        "    boxes = [box['geometry'] for box in species_dict[x]]\n",
        'boxes[0]\n',
        "allboxes = []\nfor x in species_dict:\n    boxes = [box['geometry']"\
        " for box in species_dict[x]]\n    allboxes.append(boxes)\n\n",
        'boxes[1]\n',
        'x = boxes[1]\n',
        'x[0]["x"]\n',
        'x[2]\n',
        'x[3]\n',
        'df.Label[0]["Canadian Goose"]\n',
        'species_dict\n',
        'species_dict["CanadianGoose"]\n',
        'species_dict["Canadian Goose"]\n',
        'species_dict["Canadian Goose"]["geometry"]\n',
        'species_dict["Canadian Goose"][0]["geometry"]\n',
        'x = species_dict["Canadian Goose"][0]["geometry"]\n',
        'from shapely import geometry\n',
        'pointList = [geometry.Point(node["x"],node["y"] for node in x)]\n',
        'pointList = [geometry.Point(node["x"],node["y"]) for node in x)]\n',
        'pointList = [geometry.Point(node["x"],node["y"]) for node in x]\n',
        'poly = geometry.Polygon([[p.x, p.y] for p in pointList])\n',
        'poly\n',
        'poly.bounds\n',
        'df.Label[0]\n',
        'df.Label[0][0]\n',
        'c\n',
        'x[0][0]\n',
        'x[0]\n',
        'x[1]\n',
        'node = x[1]\n',
        'node\n',
        'len(x)\n',
        'geometries = [create_box(y) for y in x for x in allboxes]\n',
        'allboxes\n',
        'allboxes[0]\n',
        'len(allboxes)\n',
        'len(allboxes[0])\n',
        'len(allboxes[1])\n',
        'pointList\n',
        'geometry.Polygon([[p.x, p.y] for p in pointList])\n',
        'minx, miny, maxx, maxy = geometry.Polygon([[p.x, p.y] for p in poin'\
        'tList]).bounds\n',
        'boxes\n',
        'len(boxes)\n',
        '[len(x) for x in boxes]\n',
        'x\n',
        'gdf = gpd.GeoDataFrame(results)\n',
        'gdf.shape\n',
        'results.dropDuplicates\n',
        'results.dropDuplicates()\n',
        'results.drop_duplicates\n',
        'results.drop_duplicates()\n',
        'gdf.image_path.value_counts()\n',
        'gdf[gdf.image_path == "BDA_18A4_20181107_2.JPG"]\n',
        'gdf[gdf.image_path == "BDA_18A4_20181107_2.JPG"].geometry.bounds\n',
        'test_df = gdf[gdf.image_path == "BDA_18A4_20181107_2.JPG"].geometry'\
        '.bounds\n',
        'from deepforest import visualize\n',
        'test_df["label"] = "Bird"\n',
        'img = visualize.plot_prediction_dataframe(df=test_df, root_dir="/Us'\
        'ers/benweinstein/Downloads/ExpertAnnotations/Imagery")\n',
        'help(visualize.plot_prediction_dataframe)\n',
        'img = visualize.plot_prediction_dataframe(df=test_df, root_dir="/Us'\
        'ers/benweinstein/Downloads/ExpertAnnotations/Imagery", show=True)\n',
        'import cv2\n',
        'img\n',
        'img.shape\n',
        'annotated = visualize.plot_predictions(test_df,img)\n',
        'from matplotlib import pyplot as plt\n',
        'df.shape\n',
        'df.head()\n',
        'df.Agreement\n',
        'df.Label\n',
        'gdf.head()\n',
        'gdf.columns\n',
        'test_df = gdf[gdf.image_path_1 == "BDA_18A4_20181107_2.JPG"].geomet'\
        'ry.bounds\n',
        'test_df = test_df.rename(columns={"minx":"xmin","miny":"ymin","maxx'\
        '":"xmax","maxy":"ymax"})    \ntest_df["image_path"] = "BDA_18A4_201'\
        '81107_2.JPG"\ntest_df["label"] = 0\nimg = cv2.imread("/Users/benwei'\
        'nstein/Downloads/ExpertAnnotations/Imagery/BDA_18A4_20181107_2.JPG"'\
        ')\nannotated = visualize.plot_predictions(img,test_df)\n\n',
        'gdf\n',
        'test_df = gdf[gdf.image_path_2 == "BDA_18A4_20181107_2.JPG"].geomet'\
        'ry.bounds\n',
        'test_df = test_df.rename(columns={"minx":"xmin","miny":"ymin","maxx'\
        '":"xmax","maxy":"ymax"})\n',
        'test_df["image_path"] = "BDA_18A4_20181107_2.JPG"\n',
        'test_df["label"] = 0\n',
        'img = cv2.imread("/Users/benweinstein/Downloads/ExpertAnnotations/I'\
        'magery/BDA_18A4_20181107_2.JPG")\n',
        'annotated = visualize.plot_predictions(img,test_df)\n',
        'annotated\n',
        'plt.imshow(annotated)\n',
        'test_df.df\n',
        'results\n',
        'results[results.image_path=="BDA_18A4_20181107_2.JPG"]\n',
        'results[results.image_path=="BDA_18A4_20181107_2.JPG"]["created_by"'\
        ']\n',
        'results.columns\n',
        'df.columns\n',
        'df["Created By"]\n',
        'df["Created By"].value_counts\n',
        'df["Created By"].value_counts()\n',
        'df["Created By"].value_counts()[0]\n',
        'df["Created By"].value_counts().index\n',
        'df["Created By"].value_counts().index[0]\n',
        'test_df.shape\n',
        'plt.imshow(annotated[:,:,::-1])\n']},
                       'launch-id': None,
                       'sel-line': 1L,
                       'sel-line-start': 2L,
                       'selection_end': 59L,
                       'selection_start': 59L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 162L,
                       'selection_end': 162L,
                       'selection_start': 162L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('tests/test_main.py'),
        {'attrib-starts': [('test_use_bird_release|0|',
                            81)],
         'code-line': 'def test_use_bird_release(m):\n',
         'first-line': 66L,
         'folded-linenos': [],
         'sel-line': 81L,
         'sel-line-start': 2392L,
         'selection_end': 2421L,
         'selection_start': 2392L,
         'zoom': 0L},
        1624745035.6553],
        [loc('tests/test_utilities.py'),
         {'attrib-starts': [],
          'code-line': '# test_utilities\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1624745035.677653],
        [loc('tests/test_utilities.py'),
         {'attrib-starts': [('test_use_bird_release|0|',
                             33)],
          'code-line': '    assert os.path.exists(get_data("bird.pt"))\n',
          'first-line': 20L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 955L,
          'selection_end': 998L,
          'selection_start': 998L,
          'zoom': 0L},
         1624745135.852139],
        [loc('tests/test_utilities.py'),
         {'attrib-starts': [('config|0|',
                             14)],
          'code-line': '    config = utilities.read_config("deepforest_confi'\
                       'g.yml")\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 250L,
          'selection_end': 309L,
          'selection_start': 309L,
          'zoom': 0L},
         1624900290.855249],
        [loc('../NEON_crown_maps/zenodo_upload.py'),
         {'attrib-starts': [],
          'code-line': '### Zenodo upload\n',
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 1130L,
          'selection_start': 0L,
          'zoom': 0L},
         1624900299.203114],
        [loc('../BirdDetector/utils/zenodo_upload.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1130L,
          'selection_end': 1130L,
          'selection_start': 1130L,
          'zoom': 0L},
         1624900323.824722],
        [loc('../BirdDetector/utils/zenodo_upload.py'),
         {'attrib-starts': [],
          'code-line': '    #zipped_datasets = glob.glob("/orange/ewhite/b.w'\
                       'einstein/generalization/zenodo/*.zip")\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 1827L,
          'selection_end': 1836L,
          'selection_start': 1836L,
          'zoom': 0L},
         1624982037.248837],
        [loc('docs/installation.md'),
         {'attrib-starts': [],
          'code-line': '\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 711L,
          'selection_end': 711L,
          'selection_start': 711L,
          'zoom': 0L},
         1624996292.973889],
        [loc('docs/landing.md'),
         {'attrib-starts': [],
          'code-line': 'The rapid development of open machine learning commu'\
                       'nity resources means that tensorflow 1.1.14, which i'\
                       's required for deepforest, will rapidly become out o'\
                       'f date. Fear not, starting in 1.0.0, the model now d'\
                       'epends on the pytorch and torchvision and will be st'\
                       'able for the forseeable future.\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 588L,
          'selection_end': 879L,
          'selection_start': 879L,
          'zoom': 0L},
         1624996296.565559],
        [loc('deepforest/dataset.py'),
         {'attrib-starts': [('TreeDataset|0|',
                             36),
                            ('TreeDataset|0|.__getitem__|0|',
                             65)],
          'code-line': '        image = np.array(Image.open(img_name).conver'\
                       't("RGB"))/255\n',
          'first-line': 85L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2342L,
          'selection_end': 2407L,
          'selection_start': 2342L,
          'zoom': 0L},
         1624996298.079098],
        [loc('../NEON_crown_maps/zenodo_upload.py'),
         {'attrib-starts': [],
          'code-line': '### Zenodo upload\n',
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 1130L,
          'selection_start': 0L,
          'zoom': 0L},
         1624996321.814716],
        [loc('../BirdDetector/generalization.py'),
         {'attrib-starts': [('fine_tune|0|',
                             164)],
          'code-line': '    model.model.load_state_dict(torch.load(weights))'\
                       '\n',
          'first-line': 259L,
          'folded-linenos': [],
          'sel-line': 170L,
          'sel-line-start': 7752L,
          'selection_end': 7779L,
          'selection_start': 7768L,
          'zoom': 0L},
         1624996321.817487],
        [loc('docs/landing.md'),
         {'attrib-starts': [],
          'code-line': 'The rapid development of open machine learning commu'\
                       'nity resources means that tensorflow 1.1.14, which i'\
                       's required for deepforest, will rapidly become out o'\
                       'f date. Fear not, starting in 1.0.0, the model now d'\
                       'epends on the pytorch and torchvision and will be st'\
                       'able for the forseeable future.\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 588L,
          'selection_end': 879L,
          'selection_start': 879L,
          'zoom': 0L},
         1624996321.819747],
        [loc('docs/installation.md'),
         {'attrib-starts': [],
          'code-line': '\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 711L,
          'selection_end': 711L,
          'selection_start': 711L,
          'zoom': 0L},
         1624996321.821603],
        [loc('deepforest/dataset.py'),
         {'attrib-starts': [('TreeDataset|0|',
                             36),
                            ('TreeDataset|0|.__getitem__|0|',
                             65)],
          'code-line': '        image = np.array(Image.open(img_name).conver'\
                       't("RGB"))/255\n',
          'first-line': 85L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2342L,
          'selection_end': 2407L,
          'selection_start': 2342L,
          'zoom': 0L},
         1624996321.823858],
        [loc('../DeepTreeAttention/src/models/Hang2020.py'),
         {'attrib-starts': [('Hang2020|0|',
                             3),
                            ('Hang2020|0|.forward|0|',
                             8)],
          'code-line': '    def forward(self):\n',
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 154L,
          'selection_end': 176L,
          'selection_start': 176L,
          'zoom': 0L},
         1624996842.621079],
        [loc('deepforest/model.py'),
         {'attrib-starts': [('create_anchor_generator|0|',
                             14)],
          'code-line': 'def create_anchor_generator(sizes=((8, 16, 32, 64, 1'\
                       '28, 256, 400),),\n',
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 375L,
          'selection_end': 443L,
          'selection_start': 443L,
          'zoom': 0L},
         1624996874.540514],
        [loc('../DeepTreeAttention/src/models/Hang2020.py'),
         {'attrib-starts': [('Hang2020|0|',
                             12),
                            ('Hang2020|0|.__init__|0|',
                             13)],
          'code-line': '    def __init__(self):\n',
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 176L,
          'selection_end': 199L,
          'selection_start': 199L,
          'zoom': 0L},
         1624997328.521404],
        [loc('deepforest/model.py'),
         {'attrib-starts': [('create_anchor_generator|0|',
                             14)],
          'code-line': 'def create_anchor_generator(sizes=((8, 16, 32, 64, 1'\
                       '28, 256, 400),),\n',
          'first-line': 30L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 375L,
          'selection_end': 443L,
          'selection_start': 443L,
          'zoom': 0L},
         1624997337.93106],
        [loc('deepforest/main.py'),
         {'attrib-starts': [],
          'code-line': '# entry point for deepforest model\n',
          'first-line': 404L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1624997606.187928]],
        20),
        'current-loc': loc('../DeepTreeAttention/src/models/Hang2020.py'),
        'editor-state-list': [(loc('../DeepTreeAttention/src/models/Hang2020.py'),
                               {'attrib-starts': [('spectral_network|0|',
        35)],
                                'code-line': '\n',
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 37L,
                                'sel-line-start': 1128L,
                                'selection_end': 1128L,
                                'selection_start': 1128L,
                                'zoom': 0L}),
                              (loc('deepforest/main.py'),
                               {'attrib-starts': [],
                                'code-line': '# entry point for deepforest m'\
        'odel\n',
                                'first-line': 404L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('deepforest/model.py'),
                               {'attrib-starts': [('create_anchor_generator|'\
        '0|',
        14)],
                                'code-line': 'def create_anchor_generator(si'\
        'zes=((8, 16, 32, 64, 128, 256, 400),),\n',
                                'first-line': 30L,
                                'folded-linenos': [],
                                'sel-line': 14L,
                                'sel-line-start': 375L,
                                'selection_end': 443L,
                                'selection_start': 443L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../DeepTreeAttention/src/models/Hang2020.py'),
         loc('deepforest/main.py'),
         loc('deepforest/model.py')]),
                               'open_files': [u'deepforest/model.py',
        u'deepforest/main.py',
        u'../DeepTreeAttention/src/models/Hang2020.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.44329896907216493},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           4),
                          1624744017.562212),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1607965912.374172),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1399,
                         1097)}]}
guimgr.recent-documents = [loc('../DeepTreeAttention/src/models/Hang2020.py'),
                           loc('deepforest/main.py'),
                           loc('deepforest/model.py')]
guimgr.visual-state = {loc('../BirdDetector/generalization.py'): {'attrib-st'\
        'arts': [('fine_tune|0|',
                  164)],
        'code-line': '    model.model.load_state_dict(torch.load(weights))\n',
        'first-line': 259L,
        'folded-linenos': [],
        'sel-line': 170L,
        'sel-line-start': 7752L,
        'selection_end': 7779L,
        'selection_start': 7768L,
        'zoom': 0L},
                       loc('deepforest/data/classes.csv'): {'attrib-starts': [],
        'code-line': 'Alive,0\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/dataset.py'): {'attrib-starts': [('Tr'\
        'eeDataset|0|',
        36),
        ('TreeDataset|0|.__getitem__|0|',
         65)],
        'code-line': '        image = np.array(Image.open(img_name).convert('\
                     '"RGB"))/255\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2342L,
        'selection_end': 2407L,
        'selection_start': 2342L,
        'zoom': 0L},
                       loc('deepforest/retinanet_train.py'): {'attrib-starts': [('m'\
        'ain|0|',
        424)],
        'code-line': '            freeze_layers=args.freeze_layers)\n',
        'first-line': 491L,
        'folded-linenos': [],
        'sel-line': 511L,
        'sel-line-start': 20341L,
        'selection_end': 20386L,
        'selection_start': 20386L,
        'zoom': 0L},
                       loc('docs/installation.md'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 711L,
        'selection_end': 711L,
        'selection_start': 711L,
        'zoom': 0L},
                       loc('docs/landing.md'): {'attrib-starts': [],
        'code-line': 'The rapid development of open machine learning communi'\
                     'ty resources means that tensorflow 1.1.14, which is re'\
                     'quired for deepforest, will rapidly become out of date'\
                     '. Fear not, starting in 1.0.0, the model now depends o'\
                     'n the pytorch and torchvision and will be stable for t'\
                     'he forseeable future.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 588L,
        'selection_end': 879L,
        'selection_start': 879L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dataset.py'): {'attrib-starts': [('te'\
        'st_TreeDataset_transform|0|',
        41)],
        'code-line': '                             transforms=dataset.get_tr'\
                     'ansform(augment=augment))\n',
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1459L,
        'selection_end': 1474L,
        'selection_start': 1474L,
        'zoom': 0L},
                       loc('../DeepForest_Model/src/crops.py'): {'attrib-sta'\
        'rts': [],
        'code-line': 'from deepforest import utilities\n',
        'first-line': 204L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 145L,
        'selection_end': 154L,
        'selection_start': 154L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame|0|',
                          144),
                         ('NDFrame|0|.__getattr__|0|',
                          5443)],
        'code-line': '            return object.__getattribute__(self, name)'\
                     '\n',
        'first-line': 5440L,
        'folded-linenos': [],
        'sel-line': 5459L,
        'sel-line-start': 184320L,
        'selection_end': 184320L,
        'selection_start': 184320L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepTreeAttention/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          498),
                         ('Module|0|._importtestmodule|0|',
                          566)],
        'code-line': '            ) from e\n',
        'first-line': 588L,
        'folded-linenos': [],
        'sel-line': 600L,
        'sel-line-start': 22899L,
        'selection_end': 22899L,
        'selection_start': 22899L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.initial-dir = {None: ('custom',
                           u'/Users/benweinstein/Documents/DeepForest')}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'load_state_',
                         u'print',
                         u'evaluate',
                         u'score_thresh',
                         u'split_raster',
                         u'parse_args',
                         u'lr',
                         u'args',
                         u'create_models',
                         u'learning',
                         u'predict_tile',
                         u'args["--steps"]',
                         u'number_of_images',
                         u'number',
                         u'num_image']
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/DeepForest/tests/test_preprocess.py',
                            [('test_split_raster_from_numpy',
                              0,
                              None,
                              None,
                              None,
                              1614291421,
                              85),
                             ('test_compute_windows',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              37),
                             ('test_select_annotations',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              43),
                             ('test_split_raster',
                              0,
                              None,
                              None,
                              None,
                              1623177561,
                              76),
                             ('test_select_annotations_tile',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              58),
                             ('test_split_raster_empty',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              100),
                             ('test_split_size_error',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              138)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_main.py',
                            [('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              149),
                             ('test_train_single',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              87),
                             ('test_predict_big_file',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              131),
                             ('test_override_transforms',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              247),
                             ('test_use_bird_release',
                              0,
                              None,
                              None,
                              None,
                              1624744029,
                              81),
                             ('test_predict_image_fromarray',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              112),
                             ('test_predict_small_file',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              140),
                             ('test_train_no_validation',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              93),
                             ('test_train_multi',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              90),
                             ('test_main',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              78),
                             ('test_predict_return_plot',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              125),
                             ('test_over_score_thresh',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              270),
                             ('test_evaluate',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              185),
                             ('test_reload_multi_class',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              238),
                             ('test_predict_image_empty',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              99),
                             ('test_train_callbacks',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              200),
                             ('test_predict_image_fromfile',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              105),
                             ('test_save_and_reload',
                              0,
                              None,
                              None,
                              None,
                              1623347677,
                              221)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_model.py',
                            [('test_create_model[10]',
                              0,
                              None,
                              None,
                              None,
                              1623255987,
                              12),
                             ('test_load_backbone',
                              0,
                              None,
                              None,
                              None,
                              1623255987,
                              6),
                             ('test_create_model[2]',
                              0,
                              None,
                              None,
                              None,
                              1623255987,
                              12),
                             ('test_create_model[1]',
                              0,
                              None,
                              None,
                              None,
                              1623255987,
                              12)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_utilities.py',
                            [('test_use_bird_release',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              33),
                             ('test_use_release',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              28),
                             ('test_project_boxes',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              44),
                             ('test_float_warning',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              38),
                             ('test_xml_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              19)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_data.py',
                            [('test_get_data',
                              0,
                              None,
                              None,
                              None,
                              1609884255,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_dataset.py',
                            [('test_TreeDataset_transform[True]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              42),
                             ('test_TreeDataset[/Users/benweinstein/Document'\
                              's/DeepForest/deepforest/data/testfile_multi.c'\
                              'sv-label_dict1]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              22),
                             ('test_multi_image_warning',
                              0,
                              None,
                              None,
                              None,
                              1623945501,
                              100),
                             ('test_collate',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              62),
                             ('test_empty_collate',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              76),
                             ('test_TreeDataset_transform[False]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              42),
                             ('test_TreeDataset[/Users/benweinstein/Document'\
                              's/DeepForest/deepforest/data/example.csv-labe'\
                              'l_dict0]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              22),
                             ('test_predict_dataloader',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              90)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_evaluate.py',
                            [('test_evaluate_empty',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              71),
                             ('test_evaluate_multi',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              43),
                             ('test_evaluate',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              27),
                             ('test_evaluate_image',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              17),
                             ('test_evaluate_save_images',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              58)])],
                          {})

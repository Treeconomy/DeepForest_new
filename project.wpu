#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('tests/test_evaluate.py'): {41L: (0,
        None,
        1,
        0)},
                     loc('tests/test_utilities.py'): {48L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {}}
debug.exceptions-ignored = {loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1514: True},
                            loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/config/__init__.py'): {1514: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BeCfPquEZeqQ6pfJCERhTaNA7C'\
        'a3fCTw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.18095238095238098,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,)],
                                 'selected-nodes': [(10,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4,
                          5],
        'notebook_display': 'normal',
        'notebook_percent': 0.40169133192389006,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'train',
                                       'fReverse': False,
                                       'fSearchText': u'fit',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(6,),
        (7,)],
                                      'selected-nodes': [(7,
        4)],
                                      'top-node': (6,
        14)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 131L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['i'\
        'mport torchvision\n',
        'model = torchvision.models.detection.retinanet_resnet50_fpn(\n     '\
        '   num_classes=2, min_size=100, max_size=100)\n\n',
        'def _make_empty_sample():\n    images = [torch.rand((3, 100, 100), '\
        'dtype=torch.float32)]\n    boxes = torch.zeros((0, 4), dtype=torch.'\
        'float32)\n    negative_target = {"boxes": boxes,\n                 '\
        '      "labels": torch.zeros(0, dtype=torch.int64),\n               '\
        '        "image_id": 4,\n                       "area": (boxes[:, 3]'\
        ' - boxes[:, 1]) * (boxes[:, 2] - boxes[:, 0]),\n                   '\
        '    "iscrowd": torch.zeros((0,), dtype=torch.int64)}\n\n    targets'\
        ' = [negative_target]\n    return images, targets\n\n',
        'images, targets = _make_empty_sample()\n',
        'images\n',
        'targets\n',
        'loss_dict = model(images, targets)\n',
        'torchvision.__version__\n',
        'matched_idxs_per_image\n',
        'targets_per_image\n',
        'foreground_idxs_per_image\n',
        'images, targets = self._make_empty_sample()    images, targets = se'\
        'lf._make_empty_sample()\n']},
                       'launch-id': None,
                       'sel-line': 146L,
                       'sel-line-start': 7799L,
                       'selection_end': 7799L,
                       'selection_start': 7799L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 37L,
                       'folded-linenos': [],
                       'history': {None: ['import pandas as pd\n',
        'pd.DataFrame({"image_path":"OSBS_029.png","xmin":[0],"xmax":[0],"ym'\
        'in":[0],"ymax":[0]})\n',
        'targets["boxes"]\n',
        'from deepforest import main\nfrom deepforest import get_data\nfrom '\
        'matplotlib import pyplot as plt\nm = main.deepforest()\nm.use_relea'\
        'se()\nimg = m.predict_image(path=get_data("OSBS_029.png"), return_p'\
        'lot=True)\npyplot(img[:,:,::-1])\nm.config["train"]["csv_file"] = g'\
        'et_data("OSBS_029.csv")\nm.config["train"]["root_dir"] = os.path.di'\
        'rname(get_data("OSBS_029.csv"))\nm.config["epochs"] = 1\nm.create_t'\
        'rainer()\nm.fit(m)\nimg = m.predict_image(path=get_data("OSBS_029.p'\
        'ng"), return_plot=True)\npyplot(img[:,:,::-1])\n\n',
        'img = m.predict_image(path=get_data("OSBS_029.png"), return_plot=Tr'\
        'ue)\n',
        'plt(img[:,:,::-1])\n',
        'plt.imshow(img[:,:,::-1])\n\n',
        'm.config["train"]["csv_file"] = get_data("OSBS_029.csv")\nm.config['\
        '"train"]["root_dir"] = os.path.dirname(get_data("OSBS_029.csv"))\n'\
        'm.config["epochs"] = 1\nm.create_trainer()\nm.fit(m)\nimg = m.predi'\
        'ct_image(path=get_data("OSBS_029.png"), return_plot=True)\nplt.imsh'\
        'ow(img[:,:,::-1])\n\n',
        'import os\n',
        'm.config["train"]["root_dir"] = os.path.dirname(get_data("OSBS_029.'\
        'csv"))\nm.config["epochs"] = 1\nm.create_trainer()\nm.trainer.fit(m'\
        ')\nimg = m.predict_image(path=get_data("OSBS_029.png"), return_plot'\
        '=True)\nplt.imshow(img[:,:,::-1])\n\n',
        'from deepforest import main\nfrom deepforest import get_data\nfrom '\
        'matplotlib import pyplot as plt\nimport os\nm = main.deepforest()\n'\
        'm.use_release()\nold = m.predict_image(path=get_data("OSBS_029.png"'\
        '), return_plot=True)\nm.config["train"]["csv_file"] = get_data("OSB'\
        'S_029.csv")\nm.config["train"]["root_dir"] = os.path.dirname(get_da'\
        'ta("OSBS_029.csv"))\nm.config["epochs"] = 1\nm.create_trainer()\nm.'\
        'trainer.fit(m)\nnew = m.predict_image(path=get_data("OSBS_029.png")'\
        ', return_plot=True)\nfig, axes = plt.subplots(nrows=1,ncols=2, figs'\
        'ize=(5,5))\naxes[0].imshow(old)\naxes[1].imshow(new)\n\n',
        'fig, axes = plt.subplots(nrows=1,ncols=2, figsize=(5,5))\naxes[0].i'\
        'mshow(old[:,::-1])\naxes[1].imshow(new[:,::-1])\n\n',
        'axes[0].imshow(old[:,:,::-1])\naxes[1].imshow(new[:,:,::-1])\n\n',
        'fig, axes = plt.subplots(nrows=1,ncols=2, figsize=(5,5))\naxes[0].i'\
        'mshow(old[:,:,::-1])\naxes[1].imshow(new[:,:,::-1])\n\n',
        'from deepforest import main\nfrom deepforest import get_data\nfrom '\
        'matplotlib import pyplot as plt\nimport os\nm = main.deepforest()\n'\
        'm.use_release()\nold = m.predict_image(path=get_data("OSBS_029.png"'\
        '), return_plot=True)\nm.config["train"]["csv_file"] = get_data("OSB'\
        'S_029.csv")\nm.config["train"]["root_dir"] = os.path.dirname(get_da'\
        'ta("OSBS_029.csv"))\nm.config["epochs"] = 1\nm.create_trainer()\nm.'\
        'trainer.fit(m)\nnew = m.predict_image(path=get_data("OSBS_029.png")'\
        ', return_plot=True)\nfig, axes = plt.subplots(nrows=1,ncols=2, figs'\
        'ize=(5,5))\naxes[0].imshow(old[:,:,::-1])\naxes[1].imshow(new[:,:,:'\
        ':-1])\n\n']},
                       'launch-id': None,
                       'sel-line': 53L,
                       'sel-line-start': 3238L,
                       'selection_end': 3238L,
                       'selection_start': 3238L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('tests/test_main.py'),
        {'attrib-starts': [('test_save_and_reload|0|',
                            221)],
         'code-line': '    m.trainer.fit(m)    \n',
         'first-line': 196L,
         'folded-linenos': [],
         'sel-line': 226L,
         'sel-line-start': 8212L,
         'selection_end': 8229L,
         'selection_start': 8226L,
         'zoom': 0L},
        1626278778.904269],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_reload_multi_class|0|',
                             238)],
          'code-line': '    two_class_m.trainer.fit(two_class_m)\n',
          'first-line': 218L,
          'folded-linenos': [],
          'sel-line': 241L,
          'sel-line-start': 8825L,
          'selection_end': 8852L,
          'selection_start': 8849L,
          'zoom': 0L},
         1626278780.020695],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_train_empty|0|',
                             87)],
          'code-line': 'def test_train_empty(m, tmpdir):\n',
          'first-line': 68L,
          'folded-linenos': [],
          'sel-line': 87L,
          'sel-line-start': 2586L,
          'selection_end': 2878L,
          'selection_start': 2586L,
          'zoom': 0L},
         1626279028.308875],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_use_bird_release|0|',
                             81)],
          'code-line': '    \n',
          'first-line': 77L,
          'folded-linenos': [],
          'sel-line': 86L,
          'sel-line-start': 2581L,
          'selection_end': 2585L,
          'selection_start': 2585L,
          'zoom': 0L},
         1626279080.970598],
        [loc('deepforest/dataset.py'),
         {'attrib-starts': [('TreeDataset|0|',
                             36),
                            ('TreeDataset|0|.__getitem__|0|',
                             65)],
          'code-line': '                                                  "y'\
                       'max"]].values.astype(float)\n',
          'first-line': 84L,
          'folded-linenos': [],
          'sel-line': 78L,
          'sel-line-start': 2769L,
          'selection_end': 2848L,
          'selection_start': 2848L,
          'zoom': 0L},
         1626279441.367536],
        [loc('tests/test_model.py'),
         {'attrib-starts': [],
          'code-line': '#test model\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1626279441.384557],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('test_forward_empty|0|',
                             33)],
          'code-line': '    loss = retinanet_model(image, targets)\n',
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1391L,
          'selection_end': 1400L,
          'selection_start': 1400L,
          'zoom': 0L},
         1626280087.273629],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('_make_empty_sample|0|',
                             7)],
          'code-line': '\n',
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 747L,
          'selection_end': 747L,
          'selection_start': 747L,
          'zoom': 0L},
         1626280618.143973],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('test_forward_empty|0|',
                             33)],
          'code-line': '    loss = retinanet_model(image, targets)\n',
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1391L,
          'selection_end': 1433L,
          'selection_start': 1391L,
          'zoom': 0L},
         1626280631.190862],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'),
         {'attrib-starts': [('RetinaNetClassificationHead|0|',
                             62),
                            ('RetinaNetClassificationHead|0|.compute_loss|0|',
                             98)],
          'code-line': "                    targets_per_image['labels'][matc"\
                       "hed_idxs_per_image[foreground_idxs_per_image]]\n",
          'first-line': 93L,
          'folded-linenos': [],
          'sel-line': 118L,
          'sel-line-start': 4574L,
          'selection_end': 4574L,
          'selection_start': 4574L,
          'zoom': 0L},
         1626280668.779935],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('test_forward_empty|0|',
                             33)],
          'code-line': '    loss = retinanet_model(image, targets)\n',
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1391L,
          'selection_end': 1433L,
          'selection_start': 1391L,
          'zoom': 0L},
         1626280668.798576],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('test_forward_negative_sample_retinanet|0|',
                             39)],
          'code-line': '    loss_dict = model(images, targets)\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 44L,
          'sel-line-start': 1664L,
          'selection_end': 1702L,
          'selection_start': 1668L,
          'zoom': 0L},
         1626280735.267553],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('_make_empty_sample|0|',
                             11)],
          'code-line': '                       "iscrowd": torch.zeros((0,), '\
                       'dtype=torch.int64)}\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 687L,
          'selection_end': 758L,
          'selection_start': 758L,
          'zoom': 0L},
         1626282544.089638],
        [loc('conda_recipe/meta.yaml'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1626282562.812724],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('_make_empty_sample|0|',
                             11)],
          'code-line': '                       "iscrowd": torch.zeros((0,), '\
                       'dtype=torch.int64)}\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 687L,
          'selection_end': 758L,
          'selection_start': 758L,
          'zoom': 0L},
         1626282567.425081],
        [loc('dev_requirements.txt'),
         {'attrib-starts': [],
          'code-line': 'torchvision >= 0.9.0\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 230L,
          'selection_end': 250L,
          'selection_start': 250L,
          'zoom': 0L},
         1626282582.922539],
        [loc('environment.yml'),
         {'attrib-starts': [],
          'code-line': '  - rasterio\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 316L,
          'selection_end': 328L,
          'selection_start': 328L,
          'zoom': 0L},
         1626282785.37397],
        [loc('tests/test_model.py'),
         {'attrib-starts': [('_make_empty_sample|0|',
                             11)],
          'code-line': '                       "iscrowd": torch.zeros((0,), '\
                       'dtype=torch.int64)}\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 687L,
          'selection_end': 758L,
          'selection_start': 758L,
          'zoom': 0L},
         1626282785.390354],
        [loc('tests/test_model.py'),
         {'attrib-starts': [],
          'code-line': 'import numpy as np\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 55L,
          'selection_end': 73L,
          'selection_start': 73L,
          'zoom': 0L},
         1626297983.814708],
        [loc('../DeepTreeAttention/src/models/Hang2020.py'),
         {'attrib-starts': [('spectral_network|0|',
                             172)],
          'code-line': '        Learn spectral features with alternating con'\
                       'volutional and attention pooling layers\n',
          'first-line': 160L,
          'folded-linenos': [],
          'sel-line': 174L,
          'sel-line-start': 7040L,
          'selection_end': 7040L,
          'selection_start': 7040L,
          'zoom': 0L},
         1626297983.81835]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': False,
        'locked': False},
        []),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 0.44329896907216493},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           5),
                          1626298004.232598),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1607965912.374172),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1741,
                         1097)}]}
guimgr.recent-documents = [loc('unknown:<untitled> #10')]
guimgr.visual-state = {loc('../BirdDetector/generalization.py'): {'attrib-st'\
        'arts': [('fine_tune|0|',
                  164)],
        'code-line': '    model.model.load_state_dict(torch.load(weights))\n',
        'first-line': 259L,
        'folded-linenos': [],
        'sel-line': 170L,
        'sel-line-start': 7752L,
        'selection_end': 7779L,
        'selection_start': 7768L,
        'zoom': 0L},
                       loc('conda_recipe/meta.yaml'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/classes.csv'): {'attrib-starts': [],
        'code-line': 'Alive,0\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/dataset.py'): {'attrib-starts': [('Tr'\
        'eeDataset|0|',
        36),
        ('TreeDataset|0|.__getitem__|0|',
         65)],
        'code-line': '        image = np.array(Image.open(img_name).convert('\
                     '"RGB"))/255\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2342L,
        'selection_end': 2407L,
        'selection_start': 2342L,
        'zoom': 0L},
                       loc('deepforest/retinanet_train.py'): {'attrib-starts': [('m'\
        'ain|0|',
        424)],
        'code-line': '            freeze_layers=args.freeze_layers)\n',
        'first-line': 491L,
        'folded-linenos': [],
        'sel-line': 511L,
        'sel-line-start': 20341L,
        'selection_end': 20386L,
        'selection_start': 20386L,
        'zoom': 0L},
                       loc('docs/installation.md'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 711L,
        'selection_end': 711L,
        'selection_start': 711L,
        'zoom': 0L},
                       loc('docs/landing.md'): {'attrib-starts': [],
        'code-line': 'The rapid development of open machine learning communi'\
                     'ty resources means that tensorflow 1.1.14, which is re'\
                     'quired for deepforest, will rapidly become out of date'\
                     '. Fear not, starting in 1.0.0, the model now depends o'\
                     'n the pytorch and torchvision and will be stable for t'\
                     'he forseeable future.\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 588L,
        'selection_end': 879L,
        'selection_start': 879L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dataset.py'): {'attrib-starts': [('te'\
        'st_TreeDataset_transform|0|',
        41)],
        'code-line': '                             transforms=dataset.get_tr'\
                     'ansform(augment=augment))\n',
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1459L,
        'selection_end': 1474L,
        'selection_start': 1474L,
        'zoom': 0L},
                       loc('../DeepForest_Model/src/crops.py'): {'attrib-sta'\
        'rts': [],
        'code-line': 'from deepforest import utilities\n',
        'first-line': 204L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 145L,
        'selection_end': 154L,
        'selection_start': 154L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame|0|',
                          144),
                         ('NDFrame|0|.__getattr__|0|',
                          5443)],
        'code-line': '            return object.__getattribute__(self, name)'\
                     '\n',
        'first-line': 5440L,
        'folded-linenos': [],
        'sel-line': 5459L,
        'sel-line-start': 184320L,
        'selection_end': 184320L,
        'selection_start': 184320L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepTreeAttention/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          498),
                         ('Module|0|._importtestmodule|0|',
                          566)],
        'code-line': '            ) from e\n',
        'first-line': 588L,
        'folded-linenos': [],
        'sel-line': 600L,
        'sel-line-start': 22899L,
        'selection_end': 22899L,
        'selection_start': 22899L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.initial-dir = {None: ('custom',
                           u'/Users/benweinstein/Documents/DeepForest')}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/.conda/envs/DeepForest/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'fit',
                         u'load_state_',
                         u'print',
                         u'evaluate',
                         u'score_thresh',
                         u'split_raster',
                         u'parse_args',
                         u'lr',
                         u'args',
                         u'create_models',
                         u'learning',
                         u'predict_tile',
                         u'args["--steps"]',
                         u'number_of_images',
                         u'number',
                         u'num_image']
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/DeepForest/tests/test_model.py',
                            [('test_create_model[2]',
                              0,
                              None,
                              None,
                              None,
                              1626280025,
                              25),
                             ('test_create_model[10]',
                              0,
                              None,
                              None,
                              None,
                              1626280025,
                              25),
                             ('test_create_model[1]',
                              0,
                              None,
                              None,
                              None,
                              1626280025,
                              25),
                             ('test_forward_empty',
                              0,
                              None,
                              None,
                              None,
                              1626282499,
                              37),
                             ('test_load_backbone',
                              0,
                              None,
                              None,
                              None,
                              1626280025,
                              19)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_dataset.py',
                            [('test_TreeDataset_transform[False]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              42),
                             ('test_TreeDataset[/Users/benweinstein/Document'\
                              's/DeepForest/deepforest/data/example.csv-labe'\
                              'l_dict0]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              22),
                             ('test_collate',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              62),
                             ('test_TreeDataset[/Users/benweinstein/Document'\
                              's/DeepForest/deepforest/data/testfile_multi.c'\
                              'sv-label_dict1]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              22),
                             ('test_predict_dataloader',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              90),
                             ('test_empty_collate',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              76),
                             ('test_multi_image_warning',
                              0,
                              None,
                              None,
                              None,
                              1623945501,
                              100),
                             ('test_TreeDataset_transform[True]',
                              0,
                              None,
                              None,
                              None,
                              1623945461,
                              42)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_data.py',
                            [('test_get_data',
                              0,
                              None,
                              None,
                              None,
                              1609884255,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_evaluate.py',
                            [('test_evaluate',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              27),
                             ('test_evaluate_image',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              17),
                             ('test_evaluate_empty',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              71),
                             ('test_evaluate_save_images',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              58),
                             ('test_evaluate_multi',
                              0,
                              None,
                              None,
                              None,
                              1623552527,
                              43)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_utilities.py',
                            [('test_use_bird_release',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              33),
                             ('test_float_warning',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              38),
                             ('test_project_boxes',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              44),
                             ('test_use_release',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              28),
                             ('test_xml_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1624745137,
                              19)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_main.py',
                            [('test_predict_return_plot',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              131),
                             ('test_train_empty',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo ValueError('Caught ValueError"\
                               " in DataLoader worker process 0.\\nOriginal "\
                               "Traceback (most recent call last):\\n  File "\
                               "\"/U...box {bbox}.\".format(bbox=bbox))\\nVa"\
                               "lueError: x_max is less than or equal to x_m"\
                               "in for bbox (0.0, 0.0, 0.0, 0.0, 0).\\n') tb"\
                               "len=12>",
                               'ValueError: Caught ValueError in DataLoader '\
                               'worker process 0.\nOriginal Traceback (most '\
                               'recent call last):\n  File "/Users/benweinst'\
                               'ein/opt/miniconda3/envs/DeepForest_pytorch/l'\
                               'ib/python3.8/site-packages/torch/utils/data/'\
                               '_utils/worker.py", line 198, in _worker_loop'\
                               '\n    data = fetcher.fetch(index)\n  File "/'\
                               'Users/benweinstein/opt/miniconda3/envs/DeepF'\
                               'orest_pytorch/lib/python3.8/site-packages/to'\
                               'rch/utils/data/_utils/fetch.py", line 44, in'\
                               ' fetch\n    data = [self.dataset[idx] for id'\
                               'x in possibly_batched_index]\n  File "/Users'\
                               '/benweinstein/opt/miniconda3/envs/DeepForest'\
                               '_pytorch/lib/python3.8/site-packages/torch/u'\
                               'tils/data/_utils/fetch.py", line 44, in <lis'\
                               'tcomp>\n    data = [self.dataset[idx] for id'\
                               'x in possibly_batched_index]\n  File "/Users'\
                               '/benweinstein/Documents/DeepForest/deepfores'\
                               't/dataset.py", line 84, in __getitem__\n    '\
                               'augmented = self.transform(image=image, bbox'\
                               'es=targets["boxes"], category_ids=targets["l'\
                               'abels"])\n  File "/Users/benweinstein/opt/mi'\
                               'niconda3/envs/DeepForest_pytorch/lib/python3'\
                               '.8/site-packages/albumentations/core/composi'\
                               'tion.py", line 180, in __call__\n    p.prepr'\
                               'ocess(data)\n  File "/Users/benweinstein/opt'\
                               '/miniconda3/envs/DeepForest_pytorch/lib/pyth'\
                               'on3.8/site-packages/albumentations/core/util'\
                               's.py", line 62, in preprocess\n    data[data'\
                               '_name] = self.check_and_convert(data[data_na'\
                               'me], rows, cols, direction="to")\n  File "/U'\
                               'sers/benweinstein/opt/miniconda3/envs/DeepFo'\
                               'rest_pytorch/lib/python3.8/site-packages/alb'\
                               'umentations/core/utils.py", line 70, in chec'\
                               'k_and_convert\n    return self.convert_to_al'\
                               'bumentations(data, rows, cols)\n  File "/Use'\
                               'rs/benweinstein/opt/miniconda3/envs/DeepFore'\
                               'st_pytorch/lib/python3.8/site-packages/album'\
                               'entations/augmentations/bbox_utils.py", line'\
                               ' 51, in convert_to_albumentations\n    retur'\
                               'n convert_bboxes_to_albumentations(data, sel'\
                               'f.params.format, rows, cols, check_validity='\
                               'True)\n  File "/Users/benweinstein/opt/minic'\
                               'onda3/envs/DeepForest_pytorch/lib/python3.8/'\
                               'site-packages/albumentations/augmentations/b'\
                               'box_utils.py", line 303, in convert_bboxes_t'\
                               'o_albumentations\n    return [convert_bbox_t'\
                               'o_albumentations(bbox, source_format, rows, '\
                               'cols, check_validity) for bbox in bboxes]\n'\
                               '  File "/Users/benweinstein/opt/miniconda3/e'\
                               'nvs/DeepForest_pytorch/lib/python3.8/site-pa'\
                               'ckages/albumentations/augmentations/bbox_uti'\
                               'ls.py", line 303, in <listcomp>\n    return '\
                               '[convert_bbox_to_albumentations(bbox, source'\
                               '_format, rows, cols, check_validity) for bbo'\
                               'x in bboxes]\n  File "/Users/benweinstein/op'\
                               't/miniconda3/envs/DeepForest_pytorch/lib/pyt'\
                               'hon3.8/site-packages/albumentations/augmenta'\
                               'tions/bbox_utils.py", line 251, in convert_b'\
                               'box_to_albumentations\n    check_bbox(bbox)'\
                               '\n  File "/Users/benweinstein/opt/miniconda3'\
                               '/envs/DeepForest_pytorch/lib/python3.8/site-'\
                               'packages/albumentations/augmentations/bbox_u'\
                               'tils.py", line 334, in check_bbox\n    raise'\
                               ' ValueError("x_max is less than or equal to '\
                               'x_min for bbox {bbox}.".format(bbox=bbox))\n'\
                               'ValueError: x_max is less than or equal to x'\
                               '_min for bbox (0.0, 0.0, 0.0, 0.0, 0).',
                               [(u'/Users/benweinstein/Documents/DeepForest/tests/test_main.py',
                                 '/Users/benweinstein/Documents/DeepForest/t'\
                                 'ests/test_main.py',
                                 92,
                                 'test_train_empty',
                                 None,
                                 '    m.trainer.fit(m)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/trainer/trainer.py',
                                 470,
                                 'fit',
                                 None,
                                 '        results = self.accelerator_backend'\
                                 '.train()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/accelerators/cpu_accelerator.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/accelerators/cpu_acce'\
                                 'lerator.py',
                                 62,
                                 'train',
                                 None,
                                 '        results = self.train_or_test()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/accelerators/accelerator.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/accelerators/accelera'\
                                 'tor.py',
                                 69,
                                 'train_or_test',
                                 None,
                                 '            results = self.trainer.train()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/trainer/trainer.py',
                                 521,
                                 'train',
                                 None,
                                 '                    self.train_loop.run_tr'\
                                 'aining_epoch()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/trainer/training_loop'\
                                 '.py',
                                 552,
                                 'run_training_epoch',
                                 None,
                                 '        for batch_idx, (batch, is_last_bat'\
                                 'ch) in train_dataloader:'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/profiler/profilers.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/profiler/profilers.py',
                                 83,
                                 'profile_iterable',
                                 None,
                                 '                value = next(iterator)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pytorch_lightning/trainer/connectors/data_connector.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/pytorch_lightning/trainer/connectors/da'\
                                 'ta_connector.py',
                                 46,
                                 '_with_is_last',
                                 None,
                                 '        last = next(it)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/dataloader.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/utils/data/dataloader.py',
                                 435,
                                 '__next__',
                                 None,
                                 '        data = self._next_data()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/dataloader.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/utils/data/dataloader.py',
                                 1085,
                                 '_next_data',
                                 None,
                                 '                return self._process_data('\
                                 'data)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/dataloader.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/utils/data/dataloader.py',
                                 1111,
                                 '_process_data',
                                 None,
                                 '            data.reraise()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/_utils.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/_utils.py',
                                 428,
                                 'reraise',
                                 None,
                                 '        raise self.exc_type(msg)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1626278991,
                              87),
                             ('test_override_transforms',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              253),
                             ('test_train_multi',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              96),
                             ('test_over_score_thresh',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              276),
                             ('test_predict_small_file',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              146),
                             ('test_main',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              78),
                             ('test_train_callbacks',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              206),
                             ('test_use_bird_release',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              81),
                             ('test_train_single',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              93),
                             ('test_predict_image_empty',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              105),
                             ('test_save_and_reload',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              227),
                             ('test_reload_multi_class',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              244),
                             ('test_evaluate',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              191),
                             ('test_predict_image_fromfile',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              111),
                             ('test_train_no_validation',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              99),
                             ('test_predict_big_file',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              137),
                             ('test_predict_image_fromarray',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              118),
                             ('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1626278991,
                              155)]),
                           (u'/Users/benweinstein/Documents/DeepForest/tests/test_preprocess.py',
                            [('test_select_annotations',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              43),
                             ('test_split_raster_from_numpy',
                              0,
                              None,
                              None,
                              None,
                              1614291421,
                              85),
                             ('test_split_raster_empty',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              100),
                             ('test_select_annotations_tile',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              58),
                             ('test_compute_windows',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              37),
                             ('test_split_raster',
                              0,
                              None,
                              None,
                              None,
                              1623177561,
                              76),
                             ('test_split_size_error',
                              0,
                              None,
                              None,
                              None,
                              1614291339,
                              138)])],
                          {})
